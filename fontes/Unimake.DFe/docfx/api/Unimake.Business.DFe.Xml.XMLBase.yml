### YamlMime:ManagedReference
items:
- uid: Unimake.Business.DFe.Xml.XMLBase
  commentId: T:Unimake.Business.DFe.Xml.XMLBase
  id: XMLBase
  parent: Unimake.Business.DFe.Xml
  children:
  - Unimake.Business.DFe.Xml.XMLBase.#ctor
  - Unimake.Business.DFe.Xml.XMLBase.GerarXML
  - Unimake.Business.DFe.Xml.XMLBase.LerXML``1(System.Xml.XmlDocument)
  - Unimake.Business.DFe.Xml.XMLBase.NameSpaces
  langs:
  - csharp
  - vb
  name: XMLBase
  nameWithType: XMLBase
  fullName: Unimake.Business.DFe.Xml.XMLBase
  type: Class
  source:
    id: XMLBase
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\XMLBase.cs
    startLine: 12
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml
  summary: "\nClasse Base para criação de classes de serialização de XML\n"
  example: []
  syntax:
    content: >-
      [ComVisible(true)]

      public abstract class XMLBase
    content.vb: >-
      <ComVisible(True)>

      Public MustInherit Class XMLBase
  inheritance:
  - System.Object
  derivedClasses:
  - Unimake.Business.DFe.Xml.CTe.ConsReciCTe
  - Unimake.Business.DFe.Xml.CTe.ConsSitCTe
  - Unimake.Business.DFe.Xml.CTe.ConsStatServCte
  - Unimake.Business.DFe.Xml.CTe.CteProc
  - Unimake.Business.DFe.Xml.CTe.DistDFeInt
  - Unimake.Business.DFe.Xml.CTe.EnviCTe
  - Unimake.Business.DFe.Xml.CTe.EventoCTe
  - Unimake.Business.DFe.Xml.CTe.InutCTe
  - Unimake.Business.DFe.Xml.CTe.ProcEventoCTe
  - Unimake.Business.DFe.Xml.CTe.ProcInutCTe
  - Unimake.Business.DFe.Xml.CTe.RetConsReciCTe
  - Unimake.Business.DFe.Xml.CTe.RetConsSitCTe
  - Unimake.Business.DFe.Xml.CTe.RetConsStatServCte
  - Unimake.Business.DFe.Xml.CTe.RetDistDFeInt
  - Unimake.Business.DFe.Xml.CTe.RetEnviCTe
  - Unimake.Business.DFe.Xml.CTe.RetInutCTe
  - Unimake.Business.DFe.Xml.CTeOS.CTeOS
  - Unimake.Business.DFe.Xml.CTeOS.CteOSProc
  - Unimake.Business.DFe.Xml.CTeOS.RetCTeOS
  - Unimake.Business.DFe.Xml.GNRE.TConsLoteGNRE
  - Unimake.Business.DFe.Xml.GNRE.TConsultaConfigUf
  - Unimake.Business.DFe.Xml.GNRE.TLoteGNRE
  - Unimake.Business.DFe.Xml.GNRE.TResultLoteGNRE
  - Unimake.Business.DFe.Xml.GNRE.TRetLoteGNRE
  - Unimake.Business.DFe.Xml.MDFe.ConsMDFeNaoEnc
  - Unimake.Business.DFe.Xml.MDFe.ConsReciMDFe
  - Unimake.Business.DFe.Xml.MDFe.ConsSitMDFe
  - Unimake.Business.DFe.Xml.MDFe.ConsStatServMDFe
  - Unimake.Business.DFe.Xml.MDFe.EnviMDFe
  - Unimake.Business.DFe.Xml.MDFe.EventoMDFe
  - Unimake.Business.DFe.Xml.MDFe.MdfeProc
  - Unimake.Business.DFe.Xml.MDFe.ProcEventoMDFe
  - Unimake.Business.DFe.Xml.MDFe.RetConsMDFeNaoEnc
  - Unimake.Business.DFe.Xml.MDFe.RetConsReciMDFe
  - Unimake.Business.DFe.Xml.MDFe.RetConsSitMDFe
  - Unimake.Business.DFe.Xml.MDFe.RetConsStatServMDFe
  - Unimake.Business.DFe.Xml.MDFe.RetEnviMDFe
  - Unimake.Business.DFe.Xml.NFe.ConsCadBase
  - Unimake.Business.DFe.Xml.NFe.ConsReciNFe
  - Unimake.Business.DFe.Xml.NFe.ConsSitNFe
  - Unimake.Business.DFe.Xml.NFe.ConsStatServ
  - Unimake.Business.DFe.Xml.NFe.DistDFeInt
  - Unimake.Business.DFe.Xml.NFe.EnvEvento
  - Unimake.Business.DFe.Xml.NFe.EnviNFe
  - Unimake.Business.DFe.Xml.NFe.InutNFe
  - Unimake.Business.DFe.Xml.NFe.NfeProc
  - Unimake.Business.DFe.Xml.NFe.ProcEventoNFe
  - Unimake.Business.DFe.Xml.NFe.ProcInutNFe
  - Unimake.Business.DFe.Xml.NFe.RetConsCad
  - Unimake.Business.DFe.Xml.NFe.RetConsReciNFe
  - Unimake.Business.DFe.Xml.NFe.RetConsSitNFe
  - Unimake.Business.DFe.Xml.NFe.RetConsStatServ
  - Unimake.Business.DFe.Xml.NFe.RetDistDFeInt
  - Unimake.Business.DFe.Xml.NFe.RetEnviNFe
  - Unimake.Business.DFe.Xml.NFe.RetInutNFe
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
    ctor: System.Runtime.InteropServices.ComVisibleAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Unimake.Business.DFe.Xml.XMLBase.NameSpaces
  commentId: P:Unimake.Business.DFe.Xml.XMLBase.NameSpaces
  id: NameSpaces
  parent: Unimake.Business.DFe.Xml.XMLBase
  langs:
  - csharp
  - vb
  name: NameSpaces
  nameWithType: XMLBase.NameSpaces
  fullName: Unimake.Business.DFe.Xml.XMLBase.NameSpaces
  type: Property
  source:
    id: NameSpaces
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\XMLBase.cs
    startLine: 20
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml
  summary: "\nLista de NameSpaces\n"
  example: []
  syntax:
    content: protected List<XMLUtility.TNameSpace> NameSpaces { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Unimake.Business.DFe.Utility.XMLUtility.TNameSpace}
    content.vb: Protected ReadOnly Property NameSpaces As List(Of XMLUtility.TNameSpace)
  overload: Unimake.Business.DFe.Xml.XMLBase.NameSpaces*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Unimake.Business.DFe.Xml.XMLBase.#ctor
  commentId: M:Unimake.Business.DFe.Xml.XMLBase.#ctor
  id: '#ctor'
  parent: Unimake.Business.DFe.Xml.XMLBase
  langs:
  - csharp
  - vb
  name: XMLBase()
  nameWithType: XMLBase.XMLBase()
  fullName: Unimake.Business.DFe.Xml.XMLBase.XMLBase()
  type: Constructor
  source:
    id: .ctor
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\XMLBase.cs
    startLine: 29
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml
  summary: "\nConstrutor base\n"
  example: []
  syntax:
    content: public XMLBase()
    content.vb: Public Sub New
  overload: Unimake.Business.DFe.Xml.XMLBase.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.XMLBase.GerarXML
  commentId: M:Unimake.Business.DFe.Xml.XMLBase.GerarXML
  id: GerarXML
  parent: Unimake.Business.DFe.Xml.XMLBase
  langs:
  - csharp
  - vb
  name: GerarXML()
  nameWithType: XMLBase.GerarXML()
  fullName: Unimake.Business.DFe.Xml.XMLBase.GerarXML()
  type: Method
  source:
    id: GerarXML
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\XMLBase.cs
    startLine: 46
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml
  summary: "\nSerializar o objeto (Converte o objeto para XML)\n"
  example: []
  syntax:
    content: public virtual XmlDocument GerarXML()
    return:
      type: System.Xml.XmlDocument
      description: String contendo o XML
    content.vb: Public Overridable Function GerarXML As XmlDocument
  overload: Unimake.Business.DFe.Xml.XMLBase.GerarXML*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Unimake.Business.DFe.Xml.XMLBase.LerXML``1(System.Xml.XmlDocument)
  commentId: M:Unimake.Business.DFe.Xml.XMLBase.LerXML``1(System.Xml.XmlDocument)
  id: LerXML``1(System.Xml.XmlDocument)
  parent: Unimake.Business.DFe.Xml.XMLBase
  langs:
  - csharp
  - vb
  name: LerXML<T>(XmlDocument)
  nameWithType: XMLBase.LerXML<T>(XmlDocument)
  fullName: Unimake.Business.DFe.Xml.XMLBase.LerXML<T>(System.Xml.XmlDocument)
  type: Method
  source:
    id: LerXML
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\XMLBase.cs
    startLine: 54
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml
  summary: "\nDeserializar XML (Converte o XML para um objeto)\n"
  example: []
  syntax:
    content: >-
      [ComVisible(false)]

      public virtual T LerXML<T>(XmlDocument doc)
          where T : new()
    parameters:
    - id: doc
      type: System.Xml.XmlDocument
      description: Conteúdo do XML a ser deserilizado
    typeParameters:
    - id: T
      description: Tipo do objeto
    return:
      type: '{T}'
      description: Retorna o objeto com o conteúdo do XML deserializado
    content.vb: >-
      <ComVisible(False)>

      Public Overridable Function LerXML(Of T As New)(doc As XmlDocument) As T
  overload: Unimake.Business.DFe.Xml.XMLBase.LerXML*
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
    ctor: System.Runtime.InteropServices.ComVisibleAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: XMLBase.LerXML(Of T)(XmlDocument)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Unimake.Business.DFe.Xml.XMLBase.LerXML(Of T)(System.Xml.XmlDocument)
  name.vb: LerXML(Of T)(XmlDocument)
references:
- uid: Unimake.Business.DFe.Xml
  commentId: N:Unimake.Business.DFe.Xml
  name: Unimake.Business.DFe.Xml
  nameWithType: Unimake.Business.DFe.Xml
  fullName: Unimake.Business.DFe.Xml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: Unimake.Business.DFe.Xml.XMLBase.NameSpaces*
  commentId: Overload:Unimake.Business.DFe.Xml.XMLBase.NameSpaces
  name: NameSpaces
  nameWithType: XMLBase.NameSpaces
  fullName: Unimake.Business.DFe.Xml.XMLBase.NameSpaces
- uid: System.Collections.Generic.List{Unimake.Business.DFe.Utility.XMLUtility.TNameSpace}
  commentId: T:System.Collections.Generic.List{Unimake.Business.DFe.Utility.XMLUtility.TNameSpace}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<XMLUtility.TNameSpace>
  nameWithType: List<XMLUtility.TNameSpace>
  fullName: System.Collections.Generic.List<Unimake.Business.DFe.Utility.XMLUtility.TNameSpace>
  nameWithType.vb: List(Of XMLUtility.TNameSpace)
  fullName.vb: System.Collections.Generic.List(Of Unimake.Business.DFe.Utility.XMLUtility.TNameSpace)
  name.vb: List(Of XMLUtility.TNameSpace)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unimake.Business.DFe.Utility.XMLUtility.TNameSpace
    name: XMLUtility.TNameSpace
    nameWithType: XMLUtility.TNameSpace
    fullName: Unimake.Business.DFe.Utility.XMLUtility.TNameSpace
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unimake.Business.DFe.Utility.XMLUtility.TNameSpace
    name: XMLUtility.TNameSpace
    nameWithType: XMLUtility.TNameSpace
    fullName: Unimake.Business.DFe.Utility.XMLUtility.TNameSpace
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Unimake.Business.DFe.Xml.XMLBase.#ctor*
  commentId: Overload:Unimake.Business.DFe.Xml.XMLBase.#ctor
  name: XMLBase
  nameWithType: XMLBase.XMLBase
  fullName: Unimake.Business.DFe.Xml.XMLBase.XMLBase
- uid: Unimake.Business.DFe.Xml.XMLBase.GerarXML*
  commentId: Overload:Unimake.Business.DFe.Xml.XMLBase.GerarXML
  name: GerarXML
  nameWithType: XMLBase.GerarXML
  fullName: Unimake.Business.DFe.Xml.XMLBase.GerarXML
- uid: System.Xml.XmlDocument
  commentId: T:System.Xml.XmlDocument
  parent: System.Xml
  isExternal: true
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Unimake.Business.DFe.Xml.XMLBase.LerXML*
  commentId: Overload:Unimake.Business.DFe.Xml.XMLBase.LerXML
  name: LerXML
  nameWithType: XMLBase.LerXML
  fullName: Unimake.Business.DFe.Xml.XMLBase.LerXML
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
