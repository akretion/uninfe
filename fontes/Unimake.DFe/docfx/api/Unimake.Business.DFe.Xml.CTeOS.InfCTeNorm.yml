### YamlMime:ManagedReference
items:
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm
  commentId: T:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm
  id: InfCTeNorm
  parent: Unimake.Business.DFe.Xml.CTeOS
  children:
  - Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.AddInfDocRef(Unimake.Business.DFe.Xml.CTeOS.InfDocRef)
  - Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.AddSeg(Unimake.Business.DFe.Xml.CTeOS.Seg)
  - Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.Cobr
  - Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfCteSub
  - Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfDocRef
  - Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfModal
  - Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfServico
  - Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.RefCTeCanc
  - Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.Seg
  - Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.ShouldSerializeRefCTeCanc
  langs:
  - csharp
  - vb
  name: InfCTeNorm
  nameWithType: InfCTeNorm
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm
  type: Class
  source:
    id: InfCTeNorm
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTeOS\CTeOS.cs
    startLine: 1127
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTeOS
  syntax:
    content: >-
      [Serializable]

      public class InfCTeNorm
    content.vb: >-
      <Serializable>

      Public Class InfCTeNorm
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfServico
  commentId: P:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfServico
  id: InfServico
  parent: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm
  langs:
  - csharp
  - vb
  name: InfServico
  nameWithType: InfCTeNorm.InfServico
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfServico
  type: Property
  source:
    id: InfServico
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTeOS\CTeOS.cs
    startLine: 1131
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTeOS
  syntax:
    content: public InfServico InfServico { get; set; }
    parameters: []
    return:
      type: Unimake.Business.DFe.Xml.CTeOS.InfServico
    content.vb: Public Property InfServico As InfServico
  overload: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfServico*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfDocRef
  commentId: P:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfDocRef
  id: InfDocRef
  parent: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm
  langs:
  - csharp
  - vb
  name: InfDocRef
  nameWithType: InfCTeNorm.InfDocRef
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfDocRef
  type: Property
  source:
    id: InfDocRef
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTeOS\CTeOS.cs
    startLine: 1134
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTeOS
  syntax:
    content: public List<InfDocRef> InfDocRef { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Unimake.Business.DFe.Xml.CTeOS.InfDocRef}
    content.vb: Public Property InfDocRef As List(Of InfDocRef)
  overload: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfDocRef*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.Seg
  commentId: P:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.Seg
  id: Seg
  parent: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm
  langs:
  - csharp
  - vb
  name: Seg
  nameWithType: InfCTeNorm.Seg
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.Seg
  type: Property
  source:
    id: Seg
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTeOS\CTeOS.cs
    startLine: 1137
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTeOS
  syntax:
    content: public List<Seg> Seg { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Unimake.Business.DFe.Xml.CTeOS.Seg}
    content.vb: Public Property Seg As List(Of Seg)
  overload: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.Seg*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfModal
  commentId: P:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfModal
  id: InfModal
  parent: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm
  langs:
  - csharp
  - vb
  name: InfModal
  nameWithType: InfCTeNorm.InfModal
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfModal
  type: Property
  source:
    id: InfModal
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTeOS\CTeOS.cs
    startLine: 1140
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTeOS
  syntax:
    content: public InfModal InfModal { get; set; }
    parameters: []
    return:
      type: Unimake.Business.DFe.Xml.CTeOS.InfModal
    content.vb: Public Property InfModal As InfModal
  overload: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfModal*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfCteSub
  commentId: P:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfCteSub
  id: InfCteSub
  parent: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm
  langs:
  - csharp
  - vb
  name: InfCteSub
  nameWithType: InfCTeNorm.InfCteSub
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfCteSub
  type: Property
  source:
    id: InfCteSub
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTeOS\CTeOS.cs
    startLine: 1143
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTeOS
  syntax:
    content: public InfCteSub InfCteSub { get; set; }
    parameters: []
    return:
      type: Unimake.Business.DFe.Xml.CTeOS.InfCteSub
    content.vb: Public Property InfCteSub As InfCteSub
  overload: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfCteSub*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.RefCTeCanc
  commentId: P:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.RefCTeCanc
  id: RefCTeCanc
  parent: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm
  langs:
  - csharp
  - vb
  name: RefCTeCanc
  nameWithType: InfCTeNorm.RefCTeCanc
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.RefCTeCanc
  type: Property
  source:
    id: RefCTeCanc
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTeOS\CTeOS.cs
    startLine: 1146
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTeOS
  syntax:
    content: public string RefCTeCanc { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RefCTeCanc As String
  overload: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.RefCTeCanc*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.Cobr
  commentId: P:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.Cobr
  id: Cobr
  parent: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm
  langs:
  - csharp
  - vb
  name: Cobr
  nameWithType: InfCTeNorm.Cobr
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.Cobr
  type: Property
  source:
    id: Cobr
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTeOS\CTeOS.cs
    startLine: 1149
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTeOS
  syntax:
    content: public Cobr Cobr { get; set; }
    parameters: []
    return:
      type: Unimake.Business.DFe.Xml.CTeOS.Cobr
    content.vb: Public Property Cobr As Cobr
  overload: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.Cobr*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.AddInfDocRef(Unimake.Business.DFe.Xml.CTeOS.InfDocRef)
  commentId: M:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.AddInfDocRef(Unimake.Business.DFe.Xml.CTeOS.InfDocRef)
  id: AddInfDocRef(Unimake.Business.DFe.Xml.CTeOS.InfDocRef)
  parent: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm
  langs:
  - csharp
  - vb
  name: AddInfDocRef(InfDocRef)
  nameWithType: InfCTeNorm.AddInfDocRef(InfDocRef)
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.AddInfDocRef(Unimake.Business.DFe.Xml.CTeOS.InfDocRef)
  type: Method
  source:
    id: AddInfDocRef
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTeOS\CTeOS.cs
    startLine: 1154
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTeOS
  syntax:
    content: public void AddInfDocRef(InfDocRef infDocRef)
    parameters:
    - id: infDocRef
      type: Unimake.Business.DFe.Xml.CTeOS.InfDocRef
    content.vb: Public Sub AddInfDocRef(infDocRef As InfDocRef)
  overload: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.AddInfDocRef*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.AddSeg(Unimake.Business.DFe.Xml.CTeOS.Seg)
  commentId: M:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.AddSeg(Unimake.Business.DFe.Xml.CTeOS.Seg)
  id: AddSeg(Unimake.Business.DFe.Xml.CTeOS.Seg)
  parent: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm
  langs:
  - csharp
  - vb
  name: AddSeg(Seg)
  nameWithType: InfCTeNorm.AddSeg(Seg)
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.AddSeg(Unimake.Business.DFe.Xml.CTeOS.Seg)
  type: Method
  source:
    id: AddSeg
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTeOS\CTeOS.cs
    startLine: 1164
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTeOS
  syntax:
    content: public void AddSeg(Seg seg)
    parameters:
    - id: seg
      type: Unimake.Business.DFe.Xml.CTeOS.Seg
    content.vb: Public Sub AddSeg(seg As Seg)
  overload: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.AddSeg*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.ShouldSerializeRefCTeCanc
  commentId: M:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.ShouldSerializeRefCTeCanc
  id: ShouldSerializeRefCTeCanc
  parent: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm
  langs:
  - csharp
  - vb
  name: ShouldSerializeRefCTeCanc()
  nameWithType: InfCTeNorm.ShouldSerializeRefCTeCanc()
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.ShouldSerializeRefCTeCanc()
  type: Method
  source:
    id: ShouldSerializeRefCTeCanc
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTeOS\CTeOS.cs
    startLine: 1178
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTeOS
  syntax:
    content: public bool ShouldSerializeRefCTeCanc()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeRefCTeCanc As Boolean
  overload: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.ShouldSerializeRefCTeCanc*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Unimake.Business.DFe.Xml.CTeOS
  commentId: N:Unimake.Business.DFe.Xml.CTeOS
  name: Unimake.Business.DFe.Xml.CTeOS
  nameWithType: Unimake.Business.DFe.Xml.CTeOS
  fullName: Unimake.Business.DFe.Xml.CTeOS
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfServico*
  commentId: Overload:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfServico
  name: InfServico
  nameWithType: InfCTeNorm.InfServico
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfServico
- uid: Unimake.Business.DFe.Xml.CTeOS.InfServico
  commentId: T:Unimake.Business.DFe.Xml.CTeOS.InfServico
  parent: Unimake.Business.DFe.Xml.CTeOS
  name: InfServico
  nameWithType: InfServico
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfServico
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfDocRef*
  commentId: Overload:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfDocRef
  name: InfDocRef
  nameWithType: InfCTeNorm.InfDocRef
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfDocRef
- uid: System.Collections.Generic.List{Unimake.Business.DFe.Xml.CTeOS.InfDocRef}
  commentId: T:System.Collections.Generic.List{Unimake.Business.DFe.Xml.CTeOS.InfDocRef}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<InfDocRef>
  nameWithType: List<InfDocRef>
  fullName: System.Collections.Generic.List<Unimake.Business.DFe.Xml.CTeOS.InfDocRef>
  nameWithType.vb: List(Of InfDocRef)
  fullName.vb: System.Collections.Generic.List(Of Unimake.Business.DFe.Xml.CTeOS.InfDocRef)
  name.vb: List(Of InfDocRef)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unimake.Business.DFe.Xml.CTeOS.InfDocRef
    name: InfDocRef
    nameWithType: InfDocRef
    fullName: Unimake.Business.DFe.Xml.CTeOS.InfDocRef
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unimake.Business.DFe.Xml.CTeOS.InfDocRef
    name: InfDocRef
    nameWithType: InfDocRef
    fullName: Unimake.Business.DFe.Xml.CTeOS.InfDocRef
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.Seg*
  commentId: Overload:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.Seg
  name: Seg
  nameWithType: InfCTeNorm.Seg
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.Seg
- uid: System.Collections.Generic.List{Unimake.Business.DFe.Xml.CTeOS.Seg}
  commentId: T:System.Collections.Generic.List{Unimake.Business.DFe.Xml.CTeOS.Seg}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Seg>
  nameWithType: List<Seg>
  fullName: System.Collections.Generic.List<Unimake.Business.DFe.Xml.CTeOS.Seg>
  nameWithType.vb: List(Of Seg)
  fullName.vb: System.Collections.Generic.List(Of Unimake.Business.DFe.Xml.CTeOS.Seg)
  name.vb: List(Of Seg)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unimake.Business.DFe.Xml.CTeOS.Seg
    name: Seg
    nameWithType: Seg
    fullName: Unimake.Business.DFe.Xml.CTeOS.Seg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unimake.Business.DFe.Xml.CTeOS.Seg
    name: Seg
    nameWithType: Seg
    fullName: Unimake.Business.DFe.Xml.CTeOS.Seg
  - name: )
    nameWithType: )
    fullName: )
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfModal*
  commentId: Overload:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfModal
  name: InfModal
  nameWithType: InfCTeNorm.InfModal
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfModal
- uid: Unimake.Business.DFe.Xml.CTeOS.InfModal
  commentId: T:Unimake.Business.DFe.Xml.CTeOS.InfModal
  parent: Unimake.Business.DFe.Xml.CTeOS
  name: InfModal
  nameWithType: InfModal
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfModal
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfCteSub*
  commentId: Overload:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfCteSub
  name: InfCteSub
  nameWithType: InfCTeNorm.InfCteSub
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.InfCteSub
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCteSub
  commentId: T:Unimake.Business.DFe.Xml.CTeOS.InfCteSub
  parent: Unimake.Business.DFe.Xml.CTeOS
  name: InfCteSub
  nameWithType: InfCteSub
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCteSub
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.RefCTeCanc*
  commentId: Overload:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.RefCTeCanc
  name: RefCTeCanc
  nameWithType: InfCTeNorm.RefCTeCanc
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.RefCTeCanc
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.Cobr*
  commentId: Overload:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.Cobr
  name: Cobr
  nameWithType: InfCTeNorm.Cobr
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.Cobr
- uid: Unimake.Business.DFe.Xml.CTeOS.Cobr
  commentId: T:Unimake.Business.DFe.Xml.CTeOS.Cobr
  parent: Unimake.Business.DFe.Xml.CTeOS
  name: Cobr
  nameWithType: Cobr
  fullName: Unimake.Business.DFe.Xml.CTeOS.Cobr
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.AddInfDocRef*
  commentId: Overload:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.AddInfDocRef
  name: AddInfDocRef
  nameWithType: InfCTeNorm.AddInfDocRef
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.AddInfDocRef
- uid: Unimake.Business.DFe.Xml.CTeOS.InfDocRef
  commentId: T:Unimake.Business.DFe.Xml.CTeOS.InfDocRef
  parent: Unimake.Business.DFe.Xml.CTeOS
  name: InfDocRef
  nameWithType: InfDocRef
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfDocRef
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.AddSeg*
  commentId: Overload:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.AddSeg
  name: AddSeg
  nameWithType: InfCTeNorm.AddSeg
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.AddSeg
- uid: Unimake.Business.DFe.Xml.CTeOS.Seg
  commentId: T:Unimake.Business.DFe.Xml.CTeOS.Seg
  parent: Unimake.Business.DFe.Xml.CTeOS
  name: Seg
  nameWithType: Seg
  fullName: Unimake.Business.DFe.Xml.CTeOS.Seg
- uid: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.ShouldSerializeRefCTeCanc*
  commentId: Overload:Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.ShouldSerializeRefCTeCanc
  name: ShouldSerializeRefCTeCanc
  nameWithType: InfCTeNorm.ShouldSerializeRefCTeCanc
  fullName: Unimake.Business.DFe.Xml.CTeOS.InfCTeNorm.ShouldSerializeRefCTeCanc
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
