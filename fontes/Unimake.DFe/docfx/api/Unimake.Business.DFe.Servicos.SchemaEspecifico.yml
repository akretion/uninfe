### YamlMime:ManagedReference
items:
- uid: Unimake.Business.DFe.Servicos.SchemaEspecifico
  commentId: T:Unimake.Business.DFe.Servicos.SchemaEspecifico
  id: SchemaEspecifico
  parent: Unimake.Business.DFe.Servicos
  children:
  - Unimake.Business.DFe.Servicos.SchemaEspecifico.Id
  - Unimake.Business.DFe.Servicos.SchemaEspecifico.SchemaArquivo
  - Unimake.Business.DFe.Servicos.SchemaEspecifico.SchemaArquivoEspecifico
  langs:
  - csharp
  - vb
  name: SchemaEspecifico
  nameWithType: SchemaEspecifico
  fullName: Unimake.Business.DFe.Servicos.SchemaEspecifico
  type: Class
  source:
    id: SchemaEspecifico
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Servicos\Configuracao.cs
    startLine: 228
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Servicos
  summary: "\nArquivos de schema específicos. Um mesmo serviço mais com vários arquivos de schema para validação, varia de acordo com uma determinada informação de tag, exemplo: CTe tem o Modal, Evento tem o tipo de evento, MDFe tem o modal, etc...\n"
  example: []
  syntax:
    content: public class SchemaEspecifico
    content.vb: Public Class SchemaEspecifico
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Unimake.Business.DFe.Servicos.SchemaEspecifico.Id
  commentId: P:Unimake.Business.DFe.Servicos.SchemaEspecifico.Id
  id: Id
  parent: Unimake.Business.DFe.Servicos.SchemaEspecifico
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: SchemaEspecifico.Id
  fullName: Unimake.Business.DFe.Servicos.SchemaEspecifico.Id
  type: Property
  source:
    id: Id
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Servicos\Configuracao.cs
    startLine: 233
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Servicos
  summary: "\nID da parte específica do XML. Pode ser o TipoEvento para eventos ou o Modal para CTe e MDFe.\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: Unimake.Business.DFe.Servicos.SchemaEspecifico.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Servicos.SchemaEspecifico.SchemaArquivo
  commentId: P:Unimake.Business.DFe.Servicos.SchemaEspecifico.SchemaArquivo
  id: SchemaArquivo
  parent: Unimake.Business.DFe.Servicos.SchemaEspecifico
  langs:
  - csharp
  - vb
  name: SchemaArquivo
  nameWithType: SchemaEspecifico.SchemaArquivo
  fullName: Unimake.Business.DFe.Servicos.SchemaEspecifico.SchemaArquivo
  type: Property
  source:
    id: SchemaArquivo
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Servicos\Configuracao.cs
    startLine: 237
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Servicos
  summary: "\nArquivo de schema principal\n"
  example: []
  syntax:
    content: public string SchemaArquivo { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SchemaArquivo As String
  overload: Unimake.Business.DFe.Servicos.SchemaEspecifico.SchemaArquivo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Servicos.SchemaEspecifico.SchemaArquivoEspecifico
  commentId: P:Unimake.Business.DFe.Servicos.SchemaEspecifico.SchemaArquivoEspecifico
  id: SchemaArquivoEspecifico
  parent: Unimake.Business.DFe.Servicos.SchemaEspecifico
  langs:
  - csharp
  - vb
  name: SchemaArquivoEspecifico
  nameWithType: SchemaEspecifico.SchemaArquivoEspecifico
  fullName: Unimake.Business.DFe.Servicos.SchemaEspecifico.SchemaArquivoEspecifico
  type: Property
  source:
    id: SchemaArquivoEspecifico
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Servicos\Configuracao.cs
    startLine: 241
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Servicos
  summary: "\nArquivo de schema da parte específica do XML\n"
  example: []
  syntax:
    content: public string SchemaArquivoEspecifico { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SchemaArquivoEspecifico As String
  overload: Unimake.Business.DFe.Servicos.SchemaEspecifico.SchemaArquivoEspecifico*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Unimake.Business.DFe.Servicos
  commentId: N:Unimake.Business.DFe.Servicos
  name: Unimake.Business.DFe.Servicos
  nameWithType: Unimake.Business.DFe.Servicos
  fullName: Unimake.Business.DFe.Servicos
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: Unimake.Business.DFe.Servicos.SchemaEspecifico.Id*
  commentId: Overload:Unimake.Business.DFe.Servicos.SchemaEspecifico.Id
  name: Id
  nameWithType: SchemaEspecifico.Id
  fullName: Unimake.Business.DFe.Servicos.SchemaEspecifico.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Unimake.Business.DFe.Servicos.SchemaEspecifico.SchemaArquivo*
  commentId: Overload:Unimake.Business.DFe.Servicos.SchemaEspecifico.SchemaArquivo
  name: SchemaArquivo
  nameWithType: SchemaEspecifico.SchemaArquivo
  fullName: Unimake.Business.DFe.Servicos.SchemaEspecifico.SchemaArquivo
- uid: Unimake.Business.DFe.Servicos.SchemaEspecifico.SchemaArquivoEspecifico*
  commentId: Overload:Unimake.Business.DFe.Servicos.SchemaEspecifico.SchemaArquivoEspecifico
  name: SchemaArquivoEspecifico
  nameWithType: SchemaEspecifico.SchemaArquivoEspecifico
  fullName: Unimake.Business.DFe.Servicos.SchemaEspecifico.SchemaArquivoEspecifico
