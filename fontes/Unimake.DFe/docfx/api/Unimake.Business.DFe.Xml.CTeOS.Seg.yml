### YamlMime:ManagedReference
items:
- uid: Unimake.Business.DFe.Xml.CTeOS.Seg
  commentId: T:Unimake.Business.DFe.Xml.CTeOS.Seg
  id: Seg
  parent: Unimake.Business.DFe.Xml.CTeOS
  children:
  - Unimake.Business.DFe.Xml.CTeOS.Seg.NApol
  - Unimake.Business.DFe.Xml.CTeOS.Seg.RespSeg
  - Unimake.Business.DFe.Xml.CTeOS.Seg.ShouldSerializeNApol
  - Unimake.Business.DFe.Xml.CTeOS.Seg.ShouldSerializeXSeg
  - Unimake.Business.DFe.Xml.CTeOS.Seg.XSeg
  langs:
  - csharp
  - vb
  name: Seg
  nameWithType: Seg
  fullName: Unimake.Business.DFe.Xml.CTeOS.Seg
  type: Class
  source:
    id: Seg
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTeOS\CTeOS.cs
    startLine: 1254
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTeOS
  syntax:
    content: >-
      [Serializable]

      public class Seg
    content.vb: >-
      <Serializable>

      Public Class Seg
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Unimake.Business.DFe.Xml.CTeOS.Seg.RespSeg
  commentId: P:Unimake.Business.DFe.Xml.CTeOS.Seg.RespSeg
  id: RespSeg
  parent: Unimake.Business.DFe.Xml.CTeOS.Seg
  langs:
  - csharp
  - vb
  name: RespSeg
  nameWithType: Seg.RespSeg
  fullName: Unimake.Business.DFe.Xml.CTeOS.Seg.RespSeg
  type: Property
  source:
    id: RespSeg
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTeOS\CTeOS.cs
    startLine: 1258
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTeOS
  syntax:
    content: public ResponsavelSeguroCTeOS RespSeg { get; set; }
    parameters: []
    return:
      type: Unimake.Business.DFe.Servicos.ResponsavelSeguroCTeOS
    content.vb: Public Property RespSeg As ResponsavelSeguroCTeOS
  overload: Unimake.Business.DFe.Xml.CTeOS.Seg.RespSeg*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTeOS.Seg.XSeg
  commentId: P:Unimake.Business.DFe.Xml.CTeOS.Seg.XSeg
  id: XSeg
  parent: Unimake.Business.DFe.Xml.CTeOS.Seg
  langs:
  - csharp
  - vb
  name: XSeg
  nameWithType: Seg.XSeg
  fullName: Unimake.Business.DFe.Xml.CTeOS.Seg.XSeg
  type: Property
  source:
    id: XSeg
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTeOS\CTeOS.cs
    startLine: 1261
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTeOS
  syntax:
    content: public string XSeg { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property XSeg As String
  overload: Unimake.Business.DFe.Xml.CTeOS.Seg.XSeg*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTeOS.Seg.NApol
  commentId: P:Unimake.Business.DFe.Xml.CTeOS.Seg.NApol
  id: NApol
  parent: Unimake.Business.DFe.Xml.CTeOS.Seg
  langs:
  - csharp
  - vb
  name: NApol
  nameWithType: Seg.NApol
  fullName: Unimake.Business.DFe.Xml.CTeOS.Seg.NApol
  type: Property
  source:
    id: NApol
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTeOS\CTeOS.cs
    startLine: 1264
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTeOS
  syntax:
    content: public string NApol { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NApol As String
  overload: Unimake.Business.DFe.Xml.CTeOS.Seg.NApol*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTeOS.Seg.ShouldSerializeXSeg
  commentId: M:Unimake.Business.DFe.Xml.CTeOS.Seg.ShouldSerializeXSeg
  id: ShouldSerializeXSeg
  parent: Unimake.Business.DFe.Xml.CTeOS.Seg
  langs:
  - csharp
  - vb
  name: ShouldSerializeXSeg()
  nameWithType: Seg.ShouldSerializeXSeg()
  fullName: Unimake.Business.DFe.Xml.CTeOS.Seg.ShouldSerializeXSeg()
  type: Method
  source:
    id: ShouldSerializeXSeg
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTeOS\CTeOS.cs
    startLine: 1270
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTeOS
  syntax:
    content: public bool ShouldSerializeXSeg()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeXSeg As Boolean
  overload: Unimake.Business.DFe.Xml.CTeOS.Seg.ShouldSerializeXSeg*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTeOS.Seg.ShouldSerializeNApol
  commentId: M:Unimake.Business.DFe.Xml.CTeOS.Seg.ShouldSerializeNApol
  id: ShouldSerializeNApol
  parent: Unimake.Business.DFe.Xml.CTeOS.Seg
  langs:
  - csharp
  - vb
  name: ShouldSerializeNApol()
  nameWithType: Seg.ShouldSerializeNApol()
  fullName: Unimake.Business.DFe.Xml.CTeOS.Seg.ShouldSerializeNApol()
  type: Method
  source:
    id: ShouldSerializeNApol
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTeOS\CTeOS.cs
    startLine: 1271
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTeOS
  syntax:
    content: public bool ShouldSerializeNApol()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeNApol As Boolean
  overload: Unimake.Business.DFe.Xml.CTeOS.Seg.ShouldSerializeNApol*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Unimake.Business.DFe.Xml.CTeOS
  commentId: N:Unimake.Business.DFe.Xml.CTeOS
  name: Unimake.Business.DFe.Xml.CTeOS
  nameWithType: Unimake.Business.DFe.Xml.CTeOS
  fullName: Unimake.Business.DFe.Xml.CTeOS
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: Unimake.Business.DFe.Xml.CTeOS.Seg.RespSeg*
  commentId: Overload:Unimake.Business.DFe.Xml.CTeOS.Seg.RespSeg
  name: RespSeg
  nameWithType: Seg.RespSeg
  fullName: Unimake.Business.DFe.Xml.CTeOS.Seg.RespSeg
- uid: Unimake.Business.DFe.Servicos.ResponsavelSeguroCTeOS
  commentId: T:Unimake.Business.DFe.Servicos.ResponsavelSeguroCTeOS
  parent: Unimake.Business.DFe.Servicos
  name: ResponsavelSeguroCTeOS
  nameWithType: ResponsavelSeguroCTeOS
  fullName: Unimake.Business.DFe.Servicos.ResponsavelSeguroCTeOS
- uid: Unimake.Business.DFe.Servicos
  commentId: N:Unimake.Business.DFe.Servicos
  name: Unimake.Business.DFe.Servicos
  nameWithType: Unimake.Business.DFe.Servicos
  fullName: Unimake.Business.DFe.Servicos
- uid: Unimake.Business.DFe.Xml.CTeOS.Seg.XSeg*
  commentId: Overload:Unimake.Business.DFe.Xml.CTeOS.Seg.XSeg
  name: XSeg
  nameWithType: Seg.XSeg
  fullName: Unimake.Business.DFe.Xml.CTeOS.Seg.XSeg
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Unimake.Business.DFe.Xml.CTeOS.Seg.NApol*
  commentId: Overload:Unimake.Business.DFe.Xml.CTeOS.Seg.NApol
  name: NApol
  nameWithType: Seg.NApol
  fullName: Unimake.Business.DFe.Xml.CTeOS.Seg.NApol
- uid: Unimake.Business.DFe.Xml.CTeOS.Seg.ShouldSerializeXSeg*
  commentId: Overload:Unimake.Business.DFe.Xml.CTeOS.Seg.ShouldSerializeXSeg
  name: ShouldSerializeXSeg
  nameWithType: Seg.ShouldSerializeXSeg
  fullName: Unimake.Business.DFe.Xml.CTeOS.Seg.ShouldSerializeXSeg
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Unimake.Business.DFe.Xml.CTeOS.Seg.ShouldSerializeNApol*
  commentId: Overload:Unimake.Business.DFe.Xml.CTeOS.Seg.ShouldSerializeNApol
  name: ShouldSerializeNApol
  nameWithType: Seg.ShouldSerializeNApol
  fullName: Unimake.Business.DFe.Xml.CTeOS.Seg.ShouldSerializeNApol
