### YamlMime:ManagedReference
items:
- uid: Unimake.Business.DFe.Xml.NFe.Prod
  commentId: T:Unimake.Business.DFe.Xml.NFe.Prod
  id: Prod
  parent: Unimake.Business.DFe.Xml.NFe
  children:
  - Unimake.Business.DFe.Xml.NFe.Prod.Arma
  - Unimake.Business.DFe.Xml.NFe.Prod.CBenef
  - Unimake.Business.DFe.Xml.NFe.Prod.CEAN
  - Unimake.Business.DFe.Xml.NFe.Prod.CEANTrib
  - Unimake.Business.DFe.Xml.NFe.Prod.CEST
  - Unimake.Business.DFe.Xml.NFe.Prod.CFOP
  - Unimake.Business.DFe.Xml.NFe.Prod.CNPJFab
  - Unimake.Business.DFe.Xml.NFe.Prod.Comb
  - Unimake.Business.DFe.Xml.NFe.Prod.CProd
  - Unimake.Business.DFe.Xml.NFe.Prod.DetExport
  - Unimake.Business.DFe.Xml.NFe.Prod.DI
  - Unimake.Business.DFe.Xml.NFe.Prod.EXTIPI
  - Unimake.Business.DFe.Xml.NFe.Prod.IndEscala
  - Unimake.Business.DFe.Xml.NFe.Prod.IndTot
  - Unimake.Business.DFe.Xml.NFe.Prod.Med
  - Unimake.Business.DFe.Xml.NFe.Prod.NCM
  - Unimake.Business.DFe.Xml.NFe.Prod.NFCI
  - Unimake.Business.DFe.Xml.NFe.Prod.NItemPed
  - Unimake.Business.DFe.Xml.NFe.Prod.NRECOPI
  - Unimake.Business.DFe.Xml.NFe.Prod.NVE
  - Unimake.Business.DFe.Xml.NFe.Prod.QCom
  - Unimake.Business.DFe.Xml.NFe.Prod.QTrib
  - Unimake.Business.DFe.Xml.NFe.Prod.Rastro
  - Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCBenef
  - Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCEST
  - Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCNPJFab
  - Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeEXTIPI
  - Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeIndEscala
  - Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNFCI
  - Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNItemPed
  - Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNRECOPI
  - Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNVE
  - Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVDescField
  - Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVFreteField
  - Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVOutroField
  - Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVSegField
  - Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeXPed
  - Unimake.Business.DFe.Xml.NFe.Prod.UCom
  - Unimake.Business.DFe.Xml.NFe.Prod.UTrib
  - Unimake.Business.DFe.Xml.NFe.Prod.VDesc
  - Unimake.Business.DFe.Xml.NFe.Prod.VDescField
  - Unimake.Business.DFe.Xml.NFe.Prod.VeicProd
  - Unimake.Business.DFe.Xml.NFe.Prod.VFrete
  - Unimake.Business.DFe.Xml.NFe.Prod.VFreteField
  - Unimake.Business.DFe.Xml.NFe.Prod.VOutro
  - Unimake.Business.DFe.Xml.NFe.Prod.VOutroField
  - Unimake.Business.DFe.Xml.NFe.Prod.VProd
  - Unimake.Business.DFe.Xml.NFe.Prod.VProdField
  - Unimake.Business.DFe.Xml.NFe.Prod.VSeg
  - Unimake.Business.DFe.Xml.NFe.Prod.VSegField
  - Unimake.Business.DFe.Xml.NFe.Prod.VUnCom
  - Unimake.Business.DFe.Xml.NFe.Prod.VUnTrib
  - Unimake.Business.DFe.Xml.NFe.Prod.XPed
  - Unimake.Business.DFe.Xml.NFe.Prod.XProd
  langs:
  - csharp
  - vb
  name: Prod
  nameWithType: Prod
  fullName: Unimake.Business.DFe.Xml.NFe.Prod
  type: Class
  source:
    id: Prod
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 794
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: >-
      [Serializable]

      public class Prod
    content.vb: >-
      <Serializable>

      Public Class Prod
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Unimake.Business.DFe.Xml.NFe.Prod.CProd
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.CProd
  id: CProd
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: CProd
  nameWithType: Prod.CProd
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.CProd
  type: Property
  source:
    id: CProd
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 798
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string CProd { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CProd As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.CProd*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.CEAN
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.CEAN
  id: CEAN
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: CEAN
  nameWithType: Prod.CEAN
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.CEAN
  type: Property
  source:
    id: CEAN
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 801
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string CEAN { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CEAN As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.CEAN*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.XProd
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.XProd
  id: XProd
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: XProd
  nameWithType: Prod.XProd
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.XProd
  type: Property
  source:
    id: XProd
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 804
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string XProd { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property XProd As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.XProd*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.NCM
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.NCM
  id: NCM
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: NCM
  nameWithType: Prod.NCM
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.NCM
  type: Property
  source:
    id: NCM
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 807
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string NCM { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NCM As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.NCM*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.NVE
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.NVE
  id: NVE
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: NVE
  nameWithType: Prod.NVE
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.NVE
  type: Property
  source:
    id: NVE
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 810
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public List<string> NVE { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property NVE As List(Of String)
  overload: Unimake.Business.DFe.Xml.NFe.Prod.NVE*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.CEST
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.CEST
  id: CEST
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: CEST
  nameWithType: Prod.CEST
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.CEST
  type: Property
  source:
    id: CEST
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 813
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string CEST { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CEST As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.CEST*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.IndEscala
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.IndEscala
  id: IndEscala
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: IndEscala
  nameWithType: Prod.IndEscala
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.IndEscala
  type: Property
  source:
    id: IndEscala
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 816
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public IndicadorEscalaRelevante? IndEscala { get; set; }
    parameters: []
    return:
      type: System.Nullable{Unimake.Business.DFe.Servicos.IndicadorEscalaRelevante}
    content.vb: Public Property IndEscala As IndicadorEscalaRelevante?
  overload: Unimake.Business.DFe.Xml.NFe.Prod.IndEscala*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.CNPJFab
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.CNPJFab
  id: CNPJFab
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: CNPJFab
  nameWithType: Prod.CNPJFab
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.CNPJFab
  type: Property
  source:
    id: CNPJFab
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 819
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string CNPJFab { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CNPJFab As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.CNPJFab*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.CBenef
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.CBenef
  id: CBenef
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: CBenef
  nameWithType: Prod.CBenef
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.CBenef
  type: Property
  source:
    id: CBenef
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 822
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string CBenef { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CBenef As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.CBenef*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.EXTIPI
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.EXTIPI
  id: EXTIPI
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: EXTIPI
  nameWithType: Prod.EXTIPI
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.EXTIPI
  type: Property
  source:
    id: EXTIPI
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 825
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string EXTIPI { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EXTIPI As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.EXTIPI*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.CFOP
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.CFOP
  id: CFOP
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: CFOP
  nameWithType: Prod.CFOP
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.CFOP
  type: Property
  source:
    id: CFOP
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 828
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string CFOP { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CFOP As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.CFOP*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.UCom
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.UCom
  id: UCom
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: UCom
  nameWithType: Prod.UCom
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.UCom
  type: Property
  source:
    id: UCom
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 831
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string UCom { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UCom As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.UCom*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.QCom
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.QCom
  id: QCom
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: QCom
  nameWithType: Prod.QCom
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.QCom
  type: Property
  source:
    id: QCom
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 834
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public double QCom { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property QCom As Double
  overload: Unimake.Business.DFe.Xml.NFe.Prod.QCom*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VUnCom
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.VUnCom
  id: VUnCom
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: VUnCom
  nameWithType: Prod.VUnCom
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VUnCom
  type: Property
  source:
    id: VUnCom
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 837
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public double VUnCom { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property VUnCom As Double
  overload: Unimake.Business.DFe.Xml.NFe.Prod.VUnCom*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VProd
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.VProd
  id: VProd
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: VProd
  nameWithType: Prod.VProd
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VProd
  type: Property
  source:
    id: VProd
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 840
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public double VProd { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property VProd As Double
  overload: Unimake.Business.DFe.Xml.NFe.Prod.VProd*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VProdField
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.VProdField
  id: VProdField
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: VProdField
  nameWithType: Prod.VProdField
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VProdField
  type: Property
  source:
    id: VProdField
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 843
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string VProdField { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property VProdField As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.VProdField*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.CEANTrib
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.CEANTrib
  id: CEANTrib
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: CEANTrib
  nameWithType: Prod.CEANTrib
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.CEANTrib
  type: Property
  source:
    id: CEANTrib
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 850
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string CEANTrib { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CEANTrib As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.CEANTrib*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.UTrib
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.UTrib
  id: UTrib
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: UTrib
  nameWithType: Prod.UTrib
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.UTrib
  type: Property
  source:
    id: UTrib
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 853
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string UTrib { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UTrib As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.UTrib*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.QTrib
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.QTrib
  id: QTrib
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: QTrib
  nameWithType: Prod.QTrib
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.QTrib
  type: Property
  source:
    id: QTrib
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 856
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public double QTrib { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property QTrib As Double
  overload: Unimake.Business.DFe.Xml.NFe.Prod.QTrib*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VUnTrib
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.VUnTrib
  id: VUnTrib
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: VUnTrib
  nameWithType: Prod.VUnTrib
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VUnTrib
  type: Property
  source:
    id: VUnTrib
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 859
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public double VUnTrib { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property VUnTrib As Double
  overload: Unimake.Business.DFe.Xml.NFe.Prod.VUnTrib*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VFrete
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.VFrete
  id: VFrete
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: VFrete
  nameWithType: Prod.VFrete
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VFrete
  type: Property
  source:
    id: VFrete
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 862
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public double VFrete { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property VFrete As Double
  overload: Unimake.Business.DFe.Xml.NFe.Prod.VFrete*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VFreteField
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.VFreteField
  id: VFreteField
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: VFreteField
  nameWithType: Prod.VFreteField
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VFreteField
  type: Property
  source:
    id: VFreteField
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 865
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string VFreteField { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property VFreteField As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.VFreteField*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VSeg
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.VSeg
  id: VSeg
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: VSeg
  nameWithType: Prod.VSeg
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VSeg
  type: Property
  source:
    id: VSeg
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 872
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public double VSeg { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property VSeg As Double
  overload: Unimake.Business.DFe.Xml.NFe.Prod.VSeg*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VSegField
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.VSegField
  id: VSegField
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: VSegField
  nameWithType: Prod.VSegField
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VSegField
  type: Property
  source:
    id: VSegField
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 875
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string VSegField { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property VSegField As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.VSegField*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VDesc
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.VDesc
  id: VDesc
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: VDesc
  nameWithType: Prod.VDesc
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VDesc
  type: Property
  source:
    id: VDesc
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 882
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public double VDesc { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property VDesc As Double
  overload: Unimake.Business.DFe.Xml.NFe.Prod.VDesc*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VDescField
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.VDescField
  id: VDescField
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: VDescField
  nameWithType: Prod.VDescField
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VDescField
  type: Property
  source:
    id: VDescField
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 885
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string VDescField { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property VDescField As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.VDescField*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VOutro
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.VOutro
  id: VOutro
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: VOutro
  nameWithType: Prod.VOutro
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VOutro
  type: Property
  source:
    id: VOutro
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 892
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public double VOutro { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property VOutro As Double
  overload: Unimake.Business.DFe.Xml.NFe.Prod.VOutro*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VOutroField
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.VOutroField
  id: VOutroField
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: VOutroField
  nameWithType: Prod.VOutroField
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VOutroField
  type: Property
  source:
    id: VOutroField
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 895
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string VOutroField { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property VOutroField As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.VOutroField*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.IndTot
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.IndTot
  id: IndTot
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: IndTot
  nameWithType: Prod.IndTot
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.IndTot
  type: Property
  source:
    id: IndTot
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 902
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public SimNao IndTot { get; set; }
    parameters: []
    return:
      type: Unimake.Business.DFe.Servicos.SimNao
    content.vb: Public Property IndTot As SimNao
  overload: Unimake.Business.DFe.Xml.NFe.Prod.IndTot*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.DI
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.DI
  id: DI
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: DI
  nameWithType: Prod.DI
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.DI
  type: Property
  source:
    id: DI
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 905
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public List<DI> DI { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.DI}
    content.vb: Public Property DI As List(Of DI)
  overload: Unimake.Business.DFe.Xml.NFe.Prod.DI*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.DetExport
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.DetExport
  id: DetExport
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: DetExport
  nameWithType: Prod.DetExport
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.DetExport
  type: Property
  source:
    id: DetExport
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 908
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public List<DetExport> DetExport { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.DetExport}
    content.vb: Public Property DetExport As List(Of DetExport)
  overload: Unimake.Business.DFe.Xml.NFe.Prod.DetExport*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.XPed
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.XPed
  id: XPed
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: XPed
  nameWithType: Prod.XPed
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.XPed
  type: Property
  source:
    id: XPed
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 911
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string XPed { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property XPed As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.XPed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.NItemPed
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.NItemPed
  id: NItemPed
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: NItemPed
  nameWithType: Prod.NItemPed
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.NItemPed
  type: Property
  source:
    id: NItemPed
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 914
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public int NItemPed { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property NItemPed As Integer
  overload: Unimake.Business.DFe.Xml.NFe.Prod.NItemPed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.NFCI
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.NFCI
  id: NFCI
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: NFCI
  nameWithType: Prod.NFCI
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.NFCI
  type: Property
  source:
    id: NFCI
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 917
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string NFCI { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NFCI As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.NFCI*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.Rastro
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.Rastro
  id: Rastro
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: Rastro
  nameWithType: Prod.Rastro
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.Rastro
  type: Property
  source:
    id: Rastro
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 921
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  remarks: ''
  example: []
  syntax:
    content: public List<Rastro> Rastro { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.Rastro}
    content.vb: Public Property Rastro As List(Of Rastro)
  overload: Unimake.Business.DFe.Xml.NFe.Prod.Rastro*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.Arma
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.Arma
  id: Arma
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: Arma
  nameWithType: Prod.Arma
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.Arma
  type: Property
  source:
    id: Arma
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 924
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public List<Arma> Arma { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.Arma}
    content.vb: Public Property Arma As List(Of Arma)
  overload: Unimake.Business.DFe.Xml.NFe.Prod.Arma*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.Comb
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.Comb
  id: Comb
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: Comb
  nameWithType: Prod.Comb
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.Comb
  type: Property
  source:
    id: Comb
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 927
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public List<Comb> Comb { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.Comb}
    content.vb: Public Property Comb As List(Of Comb)
  overload: Unimake.Business.DFe.Xml.NFe.Prod.Comb*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.Med
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.Med
  id: Med
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: Med
  nameWithType: Prod.Med
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.Med
  type: Property
  source:
    id: Med
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 930
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public List<Med> Med { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.Med}
    content.vb: Public Property Med As List(Of Med)
  overload: Unimake.Business.DFe.Xml.NFe.Prod.Med*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.NRECOPI
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.NRECOPI
  id: NRECOPI
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: NRECOPI
  nameWithType: Prod.NRECOPI
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.NRECOPI
  type: Property
  source:
    id: NRECOPI
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 933
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string NRECOPI { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NRECOPI As String
  overload: Unimake.Business.DFe.Xml.NFe.Prod.NRECOPI*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VeicProd
  commentId: P:Unimake.Business.DFe.Xml.NFe.Prod.VeicProd
  id: VeicProd
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: VeicProd
  nameWithType: Prod.VeicProd
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VeicProd
  type: Property
  source:
    id: VeicProd
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 936
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public List<VeicProd> VeicProd { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.VeicProd}
    content.vb: Public Property VeicProd As List(Of VeicProd)
  overload: Unimake.Business.DFe.Xml.NFe.Prod.VeicProd*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNVE
  commentId: M:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNVE
  id: ShouldSerializeNVE
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: ShouldSerializeNVE()
  nameWithType: Prod.ShouldSerializeNVE()
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNVE()
  type: Method
  source:
    id: ShouldSerializeNVE
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 941
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public bool ShouldSerializeNVE()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeNVE As Boolean
  overload: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNVE*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCEST
  commentId: M:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCEST
  id: ShouldSerializeCEST
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: ShouldSerializeCEST()
  nameWithType: Prod.ShouldSerializeCEST()
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCEST()
  type: Method
  source:
    id: ShouldSerializeCEST
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 943
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public bool ShouldSerializeCEST()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeCEST As Boolean
  overload: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCEST*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCNPJFab
  commentId: M:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCNPJFab
  id: ShouldSerializeCNPJFab
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: ShouldSerializeCNPJFab()
  nameWithType: Prod.ShouldSerializeCNPJFab()
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCNPJFab()
  type: Method
  source:
    id: ShouldSerializeCNPJFab
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 945
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public bool ShouldSerializeCNPJFab()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeCNPJFab As Boolean
  overload: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCNPJFab*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCBenef
  commentId: M:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCBenef
  id: ShouldSerializeCBenef
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: ShouldSerializeCBenef()
  nameWithType: Prod.ShouldSerializeCBenef()
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCBenef()
  type: Method
  source:
    id: ShouldSerializeCBenef
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 947
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public bool ShouldSerializeCBenef()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeCBenef As Boolean
  overload: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCBenef*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeEXTIPI
  commentId: M:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeEXTIPI
  id: ShouldSerializeEXTIPI
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: ShouldSerializeEXTIPI()
  nameWithType: Prod.ShouldSerializeEXTIPI()
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeEXTIPI()
  type: Method
  source:
    id: ShouldSerializeEXTIPI
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 949
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public bool ShouldSerializeEXTIPI()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeEXTIPI As Boolean
  overload: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeEXTIPI*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVFreteField
  commentId: M:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVFreteField
  id: ShouldSerializeVFreteField
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: ShouldSerializeVFreteField()
  nameWithType: Prod.ShouldSerializeVFreteField()
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVFreteField()
  type: Method
  source:
    id: ShouldSerializeVFreteField
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 951
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public bool ShouldSerializeVFreteField()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeVFreteField As Boolean
  overload: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVFreteField*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVSegField
  commentId: M:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVSegField
  id: ShouldSerializeVSegField
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: ShouldSerializeVSegField()
  nameWithType: Prod.ShouldSerializeVSegField()
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVSegField()
  type: Method
  source:
    id: ShouldSerializeVSegField
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 953
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public bool ShouldSerializeVSegField()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeVSegField As Boolean
  overload: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVSegField*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVDescField
  commentId: M:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVDescField
  id: ShouldSerializeVDescField
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: ShouldSerializeVDescField()
  nameWithType: Prod.ShouldSerializeVDescField()
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVDescField()
  type: Method
  source:
    id: ShouldSerializeVDescField
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 955
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public bool ShouldSerializeVDescField()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeVDescField As Boolean
  overload: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVDescField*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVOutroField
  commentId: M:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVOutroField
  id: ShouldSerializeVOutroField
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: ShouldSerializeVOutroField()
  nameWithType: Prod.ShouldSerializeVOutroField()
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVOutroField()
  type: Method
  source:
    id: ShouldSerializeVOutroField
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 957
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public bool ShouldSerializeVOutroField()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeVOutroField As Boolean
  overload: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVOutroField*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeXPed
  commentId: M:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeXPed
  id: ShouldSerializeXPed
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: ShouldSerializeXPed()
  nameWithType: Prod.ShouldSerializeXPed()
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeXPed()
  type: Method
  source:
    id: ShouldSerializeXPed
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 959
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public bool ShouldSerializeXPed()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeXPed As Boolean
  overload: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeXPed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNItemPed
  commentId: M:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNItemPed
  id: ShouldSerializeNItemPed
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: ShouldSerializeNItemPed()
  nameWithType: Prod.ShouldSerializeNItemPed()
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNItemPed()
  type: Method
  source:
    id: ShouldSerializeNItemPed
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 961
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public bool ShouldSerializeNItemPed()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeNItemPed As Boolean
  overload: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNItemPed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNFCI
  commentId: M:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNFCI
  id: ShouldSerializeNFCI
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: ShouldSerializeNFCI()
  nameWithType: Prod.ShouldSerializeNFCI()
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNFCI()
  type: Method
  source:
    id: ShouldSerializeNFCI
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 963
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public bool ShouldSerializeNFCI()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeNFCI As Boolean
  overload: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNFCI*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeIndEscala
  commentId: M:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeIndEscala
  id: ShouldSerializeIndEscala
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: ShouldSerializeIndEscala()
  nameWithType: Prod.ShouldSerializeIndEscala()
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeIndEscala()
  type: Method
  source:
    id: ShouldSerializeIndEscala
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 965
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public bool ShouldSerializeIndEscala()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeIndEscala As Boolean
  overload: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeIndEscala*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNRECOPI
  commentId: M:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNRECOPI
  id: ShouldSerializeNRECOPI
  parent: Unimake.Business.DFe.Xml.NFe.Prod
  langs:
  - csharp
  - vb
  name: ShouldSerializeNRECOPI()
  nameWithType: Prod.ShouldSerializeNRECOPI()
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNRECOPI()
  type: Method
  source:
    id: ShouldSerializeNRECOPI
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 967
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public bool ShouldSerializeNRECOPI()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeNRECOPI As Boolean
  overload: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNRECOPI*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Unimake.Business.DFe.Xml.NFe
  commentId: N:Unimake.Business.DFe.Xml.NFe
  name: Unimake.Business.DFe.Xml.NFe
  nameWithType: Unimake.Business.DFe.Xml.NFe
  fullName: Unimake.Business.DFe.Xml.NFe
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: Unimake.Business.DFe.Xml.NFe.Prod.CProd*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.CProd
  name: CProd
  nameWithType: Prod.CProd
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.CProd
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Unimake.Business.DFe.Xml.NFe.Prod.CEAN*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.CEAN
  name: CEAN
  nameWithType: Prod.CEAN
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.CEAN
- uid: Unimake.Business.DFe.Xml.NFe.Prod.XProd*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.XProd
  name: XProd
  nameWithType: Prod.XProd
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.XProd
- uid: Unimake.Business.DFe.Xml.NFe.Prod.NCM*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.NCM
  name: NCM
  nameWithType: Prod.NCM
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.NCM
- uid: Unimake.Business.DFe.Xml.NFe.Prod.NVE*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.NVE
  name: NVE
  nameWithType: Prod.NVE
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.NVE
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Unimake.Business.DFe.Xml.NFe.Prod.CEST*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.CEST
  name: CEST
  nameWithType: Prod.CEST
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.CEST
- uid: Unimake.Business.DFe.Xml.NFe.Prod.IndEscala*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.IndEscala
  name: IndEscala
  nameWithType: Prod.IndEscala
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.IndEscala
- uid: System.Nullable{Unimake.Business.DFe.Servicos.IndicadorEscalaRelevante}
  commentId: T:System.Nullable{Unimake.Business.DFe.Servicos.IndicadorEscalaRelevante}
  parent: System
  definition: System.Nullable`1
  name: Nullable<IndicadorEscalaRelevante>
  nameWithType: Nullable<IndicadorEscalaRelevante>
  fullName: System.Nullable<Unimake.Business.DFe.Servicos.IndicadorEscalaRelevante>
  nameWithType.vb: Nullable(Of IndicadorEscalaRelevante)
  fullName.vb: System.Nullable(Of Unimake.Business.DFe.Servicos.IndicadorEscalaRelevante)
  name.vb: Nullable(Of IndicadorEscalaRelevante)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unimake.Business.DFe.Servicos.IndicadorEscalaRelevante
    name: IndicadorEscalaRelevante
    nameWithType: IndicadorEscalaRelevante
    fullName: Unimake.Business.DFe.Servicos.IndicadorEscalaRelevante
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unimake.Business.DFe.Servicos.IndicadorEscalaRelevante
    name: IndicadorEscalaRelevante
    nameWithType: IndicadorEscalaRelevante
    fullName: Unimake.Business.DFe.Servicos.IndicadorEscalaRelevante
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Unimake.Business.DFe.Xml.NFe.Prod.CNPJFab*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.CNPJFab
  name: CNPJFab
  nameWithType: Prod.CNPJFab
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.CNPJFab
- uid: Unimake.Business.DFe.Xml.NFe.Prod.CBenef*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.CBenef
  name: CBenef
  nameWithType: Prod.CBenef
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.CBenef
- uid: Unimake.Business.DFe.Xml.NFe.Prod.EXTIPI*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.EXTIPI
  name: EXTIPI
  nameWithType: Prod.EXTIPI
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.EXTIPI
- uid: Unimake.Business.DFe.Xml.NFe.Prod.CFOP*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.CFOP
  name: CFOP
  nameWithType: Prod.CFOP
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.CFOP
- uid: Unimake.Business.DFe.Xml.NFe.Prod.UCom*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.UCom
  name: UCom
  nameWithType: Prod.UCom
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.UCom
- uid: Unimake.Business.DFe.Xml.NFe.Prod.QCom*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.QCom
  name: QCom
  nameWithType: Prod.QCom
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.QCom
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VUnCom*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.VUnCom
  name: VUnCom
  nameWithType: Prod.VUnCom
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VUnCom
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VProd*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.VProd
  name: VProd
  nameWithType: Prod.VProd
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VProd
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VProdField*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.VProdField
  name: VProdField
  nameWithType: Prod.VProdField
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VProdField
- uid: Unimake.Business.DFe.Xml.NFe.Prod.CEANTrib*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.CEANTrib
  name: CEANTrib
  nameWithType: Prod.CEANTrib
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.CEANTrib
- uid: Unimake.Business.DFe.Xml.NFe.Prod.UTrib*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.UTrib
  name: UTrib
  nameWithType: Prod.UTrib
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.UTrib
- uid: Unimake.Business.DFe.Xml.NFe.Prod.QTrib*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.QTrib
  name: QTrib
  nameWithType: Prod.QTrib
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.QTrib
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VUnTrib*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.VUnTrib
  name: VUnTrib
  nameWithType: Prod.VUnTrib
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VUnTrib
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VFrete*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.VFrete
  name: VFrete
  nameWithType: Prod.VFrete
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VFrete
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VFreteField*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.VFreteField
  name: VFreteField
  nameWithType: Prod.VFreteField
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VFreteField
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VSeg*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.VSeg
  name: VSeg
  nameWithType: Prod.VSeg
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VSeg
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VSegField*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.VSegField
  name: VSegField
  nameWithType: Prod.VSegField
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VSegField
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VDesc*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.VDesc
  name: VDesc
  nameWithType: Prod.VDesc
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VDesc
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VDescField*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.VDescField
  name: VDescField
  nameWithType: Prod.VDescField
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VDescField
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VOutro*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.VOutro
  name: VOutro
  nameWithType: Prod.VOutro
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VOutro
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VOutroField*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.VOutroField
  name: VOutroField
  nameWithType: Prod.VOutroField
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VOutroField
- uid: Unimake.Business.DFe.Xml.NFe.Prod.IndTot*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.IndTot
  name: IndTot
  nameWithType: Prod.IndTot
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.IndTot
- uid: Unimake.Business.DFe.Servicos.SimNao
  commentId: T:Unimake.Business.DFe.Servicos.SimNao
  parent: Unimake.Business.DFe.Servicos
  name: SimNao
  nameWithType: SimNao
  fullName: Unimake.Business.DFe.Servicos.SimNao
- uid: Unimake.Business.DFe.Servicos
  commentId: N:Unimake.Business.DFe.Servicos
  name: Unimake.Business.DFe.Servicos
  nameWithType: Unimake.Business.DFe.Servicos
  fullName: Unimake.Business.DFe.Servicos
- uid: Unimake.Business.DFe.Xml.NFe.Prod.DI*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.DI
  name: DI
  nameWithType: Prod.DI
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.DI
- uid: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.DI}
  commentId: T:System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.DI}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<DI>
  nameWithType: List<DI>
  fullName: System.Collections.Generic.List<Unimake.Business.DFe.Xml.NFe.DI>
  nameWithType.vb: List(Of DI)
  fullName.vb: System.Collections.Generic.List(Of Unimake.Business.DFe.Xml.NFe.DI)
  name.vb: List(Of DI)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unimake.Business.DFe.Xml.NFe.DI
    name: DI
    nameWithType: DI
    fullName: Unimake.Business.DFe.Xml.NFe.DI
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unimake.Business.DFe.Xml.NFe.DI
    name: DI
    nameWithType: DI
    fullName: Unimake.Business.DFe.Xml.NFe.DI
  - name: )
    nameWithType: )
    fullName: )
- uid: Unimake.Business.DFe.Xml.NFe.Prod.DetExport*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.DetExport
  name: DetExport
  nameWithType: Prod.DetExport
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.DetExport
- uid: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.DetExport}
  commentId: T:System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.DetExport}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<DetExport>
  nameWithType: List<DetExport>
  fullName: System.Collections.Generic.List<Unimake.Business.DFe.Xml.NFe.DetExport>
  nameWithType.vb: List(Of DetExport)
  fullName.vb: System.Collections.Generic.List(Of Unimake.Business.DFe.Xml.NFe.DetExport)
  name.vb: List(Of DetExport)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unimake.Business.DFe.Xml.NFe.DetExport
    name: DetExport
    nameWithType: DetExport
    fullName: Unimake.Business.DFe.Xml.NFe.DetExport
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unimake.Business.DFe.Xml.NFe.DetExport
    name: DetExport
    nameWithType: DetExport
    fullName: Unimake.Business.DFe.Xml.NFe.DetExport
  - name: )
    nameWithType: )
    fullName: )
- uid: Unimake.Business.DFe.Xml.NFe.Prod.XPed*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.XPed
  name: XPed
  nameWithType: Prod.XPed
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.XPed
- uid: Unimake.Business.DFe.Xml.NFe.Prod.NItemPed*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.NItemPed
  name: NItemPed
  nameWithType: Prod.NItemPed
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.NItemPed
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Unimake.Business.DFe.Xml.NFe.Prod.NFCI*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.NFCI
  name: NFCI
  nameWithType: Prod.NFCI
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.NFCI
- uid: Unimake.Business.DFe.Xml.NFe.Prod.Rastro*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.Rastro
  name: Rastro
  nameWithType: Prod.Rastro
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.Rastro
- uid: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.Rastro}
  commentId: T:System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.Rastro}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Rastro>
  nameWithType: List<Rastro>
  fullName: System.Collections.Generic.List<Unimake.Business.DFe.Xml.NFe.Rastro>
  nameWithType.vb: List(Of Rastro)
  fullName.vb: System.Collections.Generic.List(Of Unimake.Business.DFe.Xml.NFe.Rastro)
  name.vb: List(Of Rastro)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unimake.Business.DFe.Xml.NFe.Rastro
    name: Rastro
    nameWithType: Rastro
    fullName: Unimake.Business.DFe.Xml.NFe.Rastro
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unimake.Business.DFe.Xml.NFe.Rastro
    name: Rastro
    nameWithType: Rastro
    fullName: Unimake.Business.DFe.Xml.NFe.Rastro
  - name: )
    nameWithType: )
    fullName: )
- uid: Unimake.Business.DFe.Xml.NFe.Prod.Arma*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.Arma
  name: Arma
  nameWithType: Prod.Arma
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.Arma
- uid: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.Arma}
  commentId: T:System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.Arma}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Arma>
  nameWithType: List<Arma>
  fullName: System.Collections.Generic.List<Unimake.Business.DFe.Xml.NFe.Arma>
  nameWithType.vb: List(Of Arma)
  fullName.vb: System.Collections.Generic.List(Of Unimake.Business.DFe.Xml.NFe.Arma)
  name.vb: List(Of Arma)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unimake.Business.DFe.Xml.NFe.Arma
    name: Arma
    nameWithType: Arma
    fullName: Unimake.Business.DFe.Xml.NFe.Arma
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unimake.Business.DFe.Xml.NFe.Arma
    name: Arma
    nameWithType: Arma
    fullName: Unimake.Business.DFe.Xml.NFe.Arma
  - name: )
    nameWithType: )
    fullName: )
- uid: Unimake.Business.DFe.Xml.NFe.Prod.Comb*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.Comb
  name: Comb
  nameWithType: Prod.Comb
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.Comb
- uid: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.Comb}
  commentId: T:System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.Comb}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Comb>
  nameWithType: List<Comb>
  fullName: System.Collections.Generic.List<Unimake.Business.DFe.Xml.NFe.Comb>
  nameWithType.vb: List(Of Comb)
  fullName.vb: System.Collections.Generic.List(Of Unimake.Business.DFe.Xml.NFe.Comb)
  name.vb: List(Of Comb)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unimake.Business.DFe.Xml.NFe.Comb
    name: Comb
    nameWithType: Comb
    fullName: Unimake.Business.DFe.Xml.NFe.Comb
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unimake.Business.DFe.Xml.NFe.Comb
    name: Comb
    nameWithType: Comb
    fullName: Unimake.Business.DFe.Xml.NFe.Comb
  - name: )
    nameWithType: )
    fullName: )
- uid: Unimake.Business.DFe.Xml.NFe.Prod.Med*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.Med
  name: Med
  nameWithType: Prod.Med
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.Med
- uid: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.Med}
  commentId: T:System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.Med}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Med>
  nameWithType: List<Med>
  fullName: System.Collections.Generic.List<Unimake.Business.DFe.Xml.NFe.Med>
  nameWithType.vb: List(Of Med)
  fullName.vb: System.Collections.Generic.List(Of Unimake.Business.DFe.Xml.NFe.Med)
  name.vb: List(Of Med)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unimake.Business.DFe.Xml.NFe.Med
    name: Med
    nameWithType: Med
    fullName: Unimake.Business.DFe.Xml.NFe.Med
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unimake.Business.DFe.Xml.NFe.Med
    name: Med
    nameWithType: Med
    fullName: Unimake.Business.DFe.Xml.NFe.Med
  - name: )
    nameWithType: )
    fullName: )
- uid: Unimake.Business.DFe.Xml.NFe.Prod.NRECOPI*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.NRECOPI
  name: NRECOPI
  nameWithType: Prod.NRECOPI
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.NRECOPI
- uid: Unimake.Business.DFe.Xml.NFe.Prod.VeicProd*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.VeicProd
  name: VeicProd
  nameWithType: Prod.VeicProd
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.VeicProd
- uid: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.VeicProd}
  commentId: T:System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.VeicProd}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<VeicProd>
  nameWithType: List<VeicProd>
  fullName: System.Collections.Generic.List<Unimake.Business.DFe.Xml.NFe.VeicProd>
  nameWithType.vb: List(Of VeicProd)
  fullName.vb: System.Collections.Generic.List(Of Unimake.Business.DFe.Xml.NFe.VeicProd)
  name.vb: List(Of VeicProd)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unimake.Business.DFe.Xml.NFe.VeicProd
    name: VeicProd
    nameWithType: VeicProd
    fullName: Unimake.Business.DFe.Xml.NFe.VeicProd
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unimake.Business.DFe.Xml.NFe.VeicProd
    name: VeicProd
    nameWithType: VeicProd
    fullName: Unimake.Business.DFe.Xml.NFe.VeicProd
  - name: )
    nameWithType: )
    fullName: )
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNVE*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNVE
  name: ShouldSerializeNVE
  nameWithType: Prod.ShouldSerializeNVE
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNVE
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCEST*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCEST
  name: ShouldSerializeCEST
  nameWithType: Prod.ShouldSerializeCEST
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCEST
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCNPJFab*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCNPJFab
  name: ShouldSerializeCNPJFab
  nameWithType: Prod.ShouldSerializeCNPJFab
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCNPJFab
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCBenef*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCBenef
  name: ShouldSerializeCBenef
  nameWithType: Prod.ShouldSerializeCBenef
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeCBenef
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeEXTIPI*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeEXTIPI
  name: ShouldSerializeEXTIPI
  nameWithType: Prod.ShouldSerializeEXTIPI
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeEXTIPI
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVFreteField*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVFreteField
  name: ShouldSerializeVFreteField
  nameWithType: Prod.ShouldSerializeVFreteField
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVFreteField
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVSegField*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVSegField
  name: ShouldSerializeVSegField
  nameWithType: Prod.ShouldSerializeVSegField
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVSegField
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVDescField*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVDescField
  name: ShouldSerializeVDescField
  nameWithType: Prod.ShouldSerializeVDescField
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVDescField
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVOutroField*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVOutroField
  name: ShouldSerializeVOutroField
  nameWithType: Prod.ShouldSerializeVOutroField
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeVOutroField
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeXPed*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeXPed
  name: ShouldSerializeXPed
  nameWithType: Prod.ShouldSerializeXPed
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeXPed
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNItemPed*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNItemPed
  name: ShouldSerializeNItemPed
  nameWithType: Prod.ShouldSerializeNItemPed
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNItemPed
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNFCI*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNFCI
  name: ShouldSerializeNFCI
  nameWithType: Prod.ShouldSerializeNFCI
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNFCI
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeIndEscala*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeIndEscala
  name: ShouldSerializeIndEscala
  nameWithType: Prod.ShouldSerializeIndEscala
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeIndEscala
- uid: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNRECOPI*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNRECOPI
  name: ShouldSerializeNRECOPI
  nameWithType: Prod.ShouldSerializeNRECOPI
  fullName: Unimake.Business.DFe.Xml.NFe.Prod.ShouldSerializeNRECOPI
