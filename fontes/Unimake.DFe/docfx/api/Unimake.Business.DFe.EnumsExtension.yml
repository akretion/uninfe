### YamlMime:ManagedReference
items:
- uid: Unimake.Business.DFe.EnumsExtension
  commentId: T:Unimake.Business.DFe.EnumsExtension
  id: EnumsExtension
  parent: Unimake.Business.DFe
  children:
  - Unimake.Business.DFe.EnumsExtension.GetAttribute``1(System.Enum)
  - Unimake.Business.DFe.EnumsExtension.GetAttributeDescription(System.Enum)
  langs:
  - csharp
  - vb
  name: EnumsExtension
  nameWithType: EnumsExtension
  fullName: Unimake.Business.DFe.EnumsExtension
  type: Class
  source:
    id: EnumsExtension
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\ExtensionsMethods\EnumsExtension.cs
    startLine: 8
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe
  summary: "\nExtensão da Classe Enums\n"
  example: []
  syntax:
    content: public static class EnumsExtension
    content.vb: Public Module EnumsExtension
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Unimake.Business.DFe.EnumsExtension.GetAttribute``1(System.Enum)
  commentId: M:Unimake.Business.DFe.EnumsExtension.GetAttribute``1(System.Enum)
  id: GetAttribute``1(System.Enum)
  isExtensionMethod: true
  parent: Unimake.Business.DFe.EnumsExtension
  langs:
  - csharp
  - vb
  name: GetAttribute<T>(Enum)
  nameWithType: EnumsExtension.GetAttribute<T>(Enum)
  fullName: Unimake.Business.DFe.EnumsExtension.GetAttribute<T>(System.Enum)
  type: Method
  source:
    id: GetAttribute
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\ExtensionsMethods\EnumsExtension.cs
    startLine: 18
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe
  summary: "\nObter conteúdos dos atributos dos enumeradores\n"
  example: []
  syntax:
    content: >-
      public static T GetAttribute<T>(this Enum valorEnum)
          where T : Attribute
    parameters:
    - id: valorEnum
      type: System.Enum
      description: Valor do enumerador que é para recuperar os atributos
    typeParameters:
    - id: T
      description: Tipo
    return:
      type: '{T}'
      description: Atributos do Enum
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAttribute(Of T As Attribute)(valorEnum As  Enum) As T
  overload: Unimake.Business.DFe.EnumsExtension.GetAttribute*
  nameWithType.vb: EnumsExtension.GetAttribute(Of T)(Enum)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Unimake.Business.DFe.EnumsExtension.GetAttribute(Of T)(System.Enum)
  name.vb: GetAttribute(Of T)(Enum)
- uid: Unimake.Business.DFe.EnumsExtension.GetAttributeDescription(System.Enum)
  commentId: M:Unimake.Business.DFe.EnumsExtension.GetAttributeDescription(System.Enum)
  id: GetAttributeDescription(System.Enum)
  isExtensionMethod: true
  parent: Unimake.Business.DFe.EnumsExtension
  langs:
  - csharp
  - vb
  name: GetAttributeDescription(Enum)
  nameWithType: EnumsExtension.GetAttributeDescription(Enum)
  fullName: Unimake.Business.DFe.EnumsExtension.GetAttributeDescription(System.Enum)
  type: Method
  source:
    id: GetAttributeDescription
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\ExtensionsMethods\EnumsExtension.cs
    startLine: 32
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe
  summary: "\nObter o conteúdo do atributo Description do Enumerador\n"
  example: []
  syntax:
    content: public static string GetAttributeDescription(this Enum valorEnum)
    parameters:
    - id: valorEnum
      type: System.Enum
      description: Valor do Enhum que é para recuperar o conteúdo do atributo Description
    return:
      type: System.String
      description: Retorna o conteúdo do atributo Description
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAttributeDescription(valorEnum As  Enum) As String
  overload: Unimake.Business.DFe.EnumsExtension.GetAttributeDescription*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Unimake.Business.DFe
  commentId: N:Unimake.Business.DFe
  name: Unimake.Business.DFe
  nameWithType: Unimake.Business.DFe
  fullName: Unimake.Business.DFe
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: Unimake.Business.DFe.EnumsExtension.GetAttribute*
  commentId: Overload:Unimake.Business.DFe.EnumsExtension.GetAttribute
  name: GetAttribute
  nameWithType: EnumsExtension.GetAttribute
  fullName: Unimake.Business.DFe.EnumsExtension.GetAttribute
- uid: System.Enum
  commentId: T:System.Enum
  parent: System
  isExternal: true
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Unimake.Business.DFe.EnumsExtension.GetAttributeDescription*
  commentId: Overload:Unimake.Business.DFe.EnumsExtension.GetAttributeDescription
  name: GetAttributeDescription
  nameWithType: EnumsExtension.GetAttributeDescription
  fullName: Unimake.Business.DFe.EnumsExtension.GetAttributeDescription
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
