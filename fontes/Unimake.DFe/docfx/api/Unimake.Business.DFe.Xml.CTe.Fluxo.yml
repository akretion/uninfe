### YamlMime:ManagedReference
items:
- uid: Unimake.Business.DFe.Xml.CTe.Fluxo
  commentId: T:Unimake.Business.DFe.Xml.CTe.Fluxo
  id: Fluxo
  parent: Unimake.Business.DFe.Xml.CTe
  children:
  - Unimake.Business.DFe.Xml.CTe.Fluxo.AddPass(Unimake.Business.DFe.Xml.CTe.Pass)
  - Unimake.Business.DFe.Xml.CTe.Fluxo.Pass
  - Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXDest
  - Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXOrig
  - Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXRota
  - Unimake.Business.DFe.Xml.CTe.Fluxo.XDest
  - Unimake.Business.DFe.Xml.CTe.Fluxo.XOrig
  - Unimake.Business.DFe.Xml.CTe.Fluxo.XRota
  langs:
  - csharp
  - vb
  name: Fluxo
  nameWithType: Fluxo
  fullName: Unimake.Business.DFe.Xml.CTe.Fluxo
  type: Class
  source:
    id: Fluxo
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTe\EnviCTe.cs
    startLine: 585
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTe
  syntax:
    content: >-
      [Serializable]

      public class Fluxo
    content.vb: >-
      <Serializable>

      Public Class Fluxo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Unimake.Business.DFe.Xml.CTe.Fluxo.XOrig
  commentId: P:Unimake.Business.DFe.Xml.CTe.Fluxo.XOrig
  id: XOrig
  parent: Unimake.Business.DFe.Xml.CTe.Fluxo
  langs:
  - csharp
  - vb
  name: XOrig
  nameWithType: Fluxo.XOrig
  fullName: Unimake.Business.DFe.Xml.CTe.Fluxo.XOrig
  type: Property
  source:
    id: XOrig
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTe\EnviCTe.cs
    startLine: 589
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTe
  syntax:
    content: public string XOrig { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property XOrig As String
  overload: Unimake.Business.DFe.Xml.CTe.Fluxo.XOrig*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTe.Fluxo.Pass
  commentId: P:Unimake.Business.DFe.Xml.CTe.Fluxo.Pass
  id: Pass
  parent: Unimake.Business.DFe.Xml.CTe.Fluxo
  langs:
  - csharp
  - vb
  name: Pass
  nameWithType: Fluxo.Pass
  fullName: Unimake.Business.DFe.Xml.CTe.Fluxo.Pass
  type: Property
  source:
    id: Pass
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTe\EnviCTe.cs
    startLine: 592
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTe
  syntax:
    content: public List<Pass> Pass { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Unimake.Business.DFe.Xml.CTe.Pass}
    content.vb: Public Property Pass As List(Of Pass)
  overload: Unimake.Business.DFe.Xml.CTe.Fluxo.Pass*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTe.Fluxo.XDest
  commentId: P:Unimake.Business.DFe.Xml.CTe.Fluxo.XDest
  id: XDest
  parent: Unimake.Business.DFe.Xml.CTe.Fluxo
  langs:
  - csharp
  - vb
  name: XDest
  nameWithType: Fluxo.XDest
  fullName: Unimake.Business.DFe.Xml.CTe.Fluxo.XDest
  type: Property
  source:
    id: XDest
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTe\EnviCTe.cs
    startLine: 595
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTe
  syntax:
    content: public string XDest { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property XDest As String
  overload: Unimake.Business.DFe.Xml.CTe.Fluxo.XDest*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTe.Fluxo.XRota
  commentId: P:Unimake.Business.DFe.Xml.CTe.Fluxo.XRota
  id: XRota
  parent: Unimake.Business.DFe.Xml.CTe.Fluxo
  langs:
  - csharp
  - vb
  name: XRota
  nameWithType: Fluxo.XRota
  fullName: Unimake.Business.DFe.Xml.CTe.Fluxo.XRota
  type: Property
  source:
    id: XRota
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTe\EnviCTe.cs
    startLine: 598
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTe
  syntax:
    content: public string XRota { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property XRota As String
  overload: Unimake.Business.DFe.Xml.CTe.Fluxo.XRota*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTe.Fluxo.AddPass(Unimake.Business.DFe.Xml.CTe.Pass)
  commentId: M:Unimake.Business.DFe.Xml.CTe.Fluxo.AddPass(Unimake.Business.DFe.Xml.CTe.Pass)
  id: AddPass(Unimake.Business.DFe.Xml.CTe.Pass)
  parent: Unimake.Business.DFe.Xml.CTe.Fluxo
  langs:
  - csharp
  - vb
  name: AddPass(Pass)
  nameWithType: Fluxo.AddPass(Pass)
  fullName: Unimake.Business.DFe.Xml.CTe.Fluxo.AddPass(Unimake.Business.DFe.Xml.CTe.Pass)
  type: Method
  source:
    id: AddPass
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTe\EnviCTe.cs
    startLine: 603
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTe
  syntax:
    content: public void AddPass(Pass pass)
    parameters:
    - id: pass
      type: Unimake.Business.DFe.Xml.CTe.Pass
    content.vb: Public Sub AddPass(pass As Pass)
  overload: Unimake.Business.DFe.Xml.CTe.Fluxo.AddPass*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXOrig
  commentId: M:Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXOrig
  id: ShouldSerializeXOrig
  parent: Unimake.Business.DFe.Xml.CTe.Fluxo
  langs:
  - csharp
  - vb
  name: ShouldSerializeXOrig()
  nameWithType: Fluxo.ShouldSerializeXOrig()
  fullName: Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXOrig()
  type: Method
  source:
    id: ShouldSerializeXOrig
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTe\EnviCTe.cs
    startLine: 617
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTe
  syntax:
    content: public bool ShouldSerializeXOrig()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeXOrig As Boolean
  overload: Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXOrig*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXDest
  commentId: M:Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXDest
  id: ShouldSerializeXDest
  parent: Unimake.Business.DFe.Xml.CTe.Fluxo
  langs:
  - csharp
  - vb
  name: ShouldSerializeXDest()
  nameWithType: Fluxo.ShouldSerializeXDest()
  fullName: Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXDest()
  type: Method
  source:
    id: ShouldSerializeXDest
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTe\EnviCTe.cs
    startLine: 618
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTe
  syntax:
    content: public bool ShouldSerializeXDest()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeXDest As Boolean
  overload: Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXDest*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXRota
  commentId: M:Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXRota
  id: ShouldSerializeXRota
  parent: Unimake.Business.DFe.Xml.CTe.Fluxo
  langs:
  - csharp
  - vb
  name: ShouldSerializeXRota()
  nameWithType: Fluxo.ShouldSerializeXRota()
  fullName: Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXRota()
  type: Method
  source:
    id: ShouldSerializeXRota
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\CTe\EnviCTe.cs
    startLine: 619
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.CTe
  syntax:
    content: public bool ShouldSerializeXRota()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeXRota As Boolean
  overload: Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXRota*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Unimake.Business.DFe.Xml.CTe
  commentId: N:Unimake.Business.DFe.Xml.CTe
  name: Unimake.Business.DFe.Xml.CTe
  nameWithType: Unimake.Business.DFe.Xml.CTe
  fullName: Unimake.Business.DFe.Xml.CTe
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: Unimake.Business.DFe.Xml.CTe.Fluxo.XOrig*
  commentId: Overload:Unimake.Business.DFe.Xml.CTe.Fluxo.XOrig
  name: XOrig
  nameWithType: Fluxo.XOrig
  fullName: Unimake.Business.DFe.Xml.CTe.Fluxo.XOrig
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Unimake.Business.DFe.Xml.CTe.Fluxo.Pass*
  commentId: Overload:Unimake.Business.DFe.Xml.CTe.Fluxo.Pass
  name: Pass
  nameWithType: Fluxo.Pass
  fullName: Unimake.Business.DFe.Xml.CTe.Fluxo.Pass
- uid: System.Collections.Generic.List{Unimake.Business.DFe.Xml.CTe.Pass}
  commentId: T:System.Collections.Generic.List{Unimake.Business.DFe.Xml.CTe.Pass}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Pass>
  nameWithType: List<Pass>
  fullName: System.Collections.Generic.List<Unimake.Business.DFe.Xml.CTe.Pass>
  nameWithType.vb: List(Of Pass)
  fullName.vb: System.Collections.Generic.List(Of Unimake.Business.DFe.Xml.CTe.Pass)
  name.vb: List(Of Pass)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unimake.Business.DFe.Xml.CTe.Pass
    name: Pass
    nameWithType: Pass
    fullName: Unimake.Business.DFe.Xml.CTe.Pass
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unimake.Business.DFe.Xml.CTe.Pass
    name: Pass
    nameWithType: Pass
    fullName: Unimake.Business.DFe.Xml.CTe.Pass
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Unimake.Business.DFe.Xml.CTe.Fluxo.XDest*
  commentId: Overload:Unimake.Business.DFe.Xml.CTe.Fluxo.XDest
  name: XDest
  nameWithType: Fluxo.XDest
  fullName: Unimake.Business.DFe.Xml.CTe.Fluxo.XDest
- uid: Unimake.Business.DFe.Xml.CTe.Fluxo.XRota*
  commentId: Overload:Unimake.Business.DFe.Xml.CTe.Fluxo.XRota
  name: XRota
  nameWithType: Fluxo.XRota
  fullName: Unimake.Business.DFe.Xml.CTe.Fluxo.XRota
- uid: Unimake.Business.DFe.Xml.CTe.Fluxo.AddPass*
  commentId: Overload:Unimake.Business.DFe.Xml.CTe.Fluxo.AddPass
  name: AddPass
  nameWithType: Fluxo.AddPass
  fullName: Unimake.Business.DFe.Xml.CTe.Fluxo.AddPass
- uid: Unimake.Business.DFe.Xml.CTe.Pass
  commentId: T:Unimake.Business.DFe.Xml.CTe.Pass
  parent: Unimake.Business.DFe.Xml.CTe
  name: Pass
  nameWithType: Pass
  fullName: Unimake.Business.DFe.Xml.CTe.Pass
- uid: Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXOrig*
  commentId: Overload:Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXOrig
  name: ShouldSerializeXOrig
  nameWithType: Fluxo.ShouldSerializeXOrig
  fullName: Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXOrig
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXDest*
  commentId: Overload:Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXDest
  name: ShouldSerializeXDest
  nameWithType: Fluxo.ShouldSerializeXDest
  fullName: Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXDest
- uid: Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXRota*
  commentId: Overload:Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXRota
  name: ShouldSerializeXRota
  nameWithType: Fluxo.ShouldSerializeXRota
  fullName: Unimake.Business.DFe.Xml.CTe.Fluxo.ShouldSerializeXRota
