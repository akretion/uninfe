### YamlMime:ManagedReference
items:
- uid: Unimake.Business.DFe.Xml.NFe.InfAdic
  commentId: T:Unimake.Business.DFe.Xml.NFe.InfAdic
  id: InfAdic
  parent: Unimake.Business.DFe.Xml.NFe
  children:
  - Unimake.Business.DFe.Xml.NFe.InfAdic.InfAdFisco
  - Unimake.Business.DFe.Xml.NFe.InfAdic.InfCpl
  - Unimake.Business.DFe.Xml.NFe.InfAdic.ObsCont
  - Unimake.Business.DFe.Xml.NFe.InfAdic.ObsFisco
  - Unimake.Business.DFe.Xml.NFe.InfAdic.ProcRef
  - Unimake.Business.DFe.Xml.NFe.InfAdic.ShouldSerializeInfAdFisco
  - Unimake.Business.DFe.Xml.NFe.InfAdic.ShouldSerializeInfCpl
  langs:
  - csharp
  - vb
  name: InfAdic
  nameWithType: InfAdic
  fullName: Unimake.Business.DFe.Xml.NFe.InfAdic
  type: Class
  source:
    id: InfAdic
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5589
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: >-
      [Serializable]

      public class InfAdic
    content.vb: >-
      <Serializable>

      Public Class InfAdic
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Unimake.Business.DFe.Xml.NFe.InfAdic.InfAdFisco
  commentId: P:Unimake.Business.DFe.Xml.NFe.InfAdic.InfAdFisco
  id: InfAdFisco
  parent: Unimake.Business.DFe.Xml.NFe.InfAdic
  langs:
  - csharp
  - vb
  name: InfAdFisco
  nameWithType: InfAdic.InfAdFisco
  fullName: Unimake.Business.DFe.Xml.NFe.InfAdic.InfAdFisco
  type: Property
  source:
    id: InfAdFisco
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5593
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string InfAdFisco { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InfAdFisco As String
  overload: Unimake.Business.DFe.Xml.NFe.InfAdic.InfAdFisco*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.InfAdic.InfCpl
  commentId: P:Unimake.Business.DFe.Xml.NFe.InfAdic.InfCpl
  id: InfCpl
  parent: Unimake.Business.DFe.Xml.NFe.InfAdic
  langs:
  - csharp
  - vb
  name: InfCpl
  nameWithType: InfAdic.InfCpl
  fullName: Unimake.Business.DFe.Xml.NFe.InfAdic.InfCpl
  type: Property
  source:
    id: InfCpl
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5596
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string InfCpl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InfCpl As String
  overload: Unimake.Business.DFe.Xml.NFe.InfAdic.InfCpl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.InfAdic.ObsCont
  commentId: P:Unimake.Business.DFe.Xml.NFe.InfAdic.ObsCont
  id: ObsCont
  parent: Unimake.Business.DFe.Xml.NFe.InfAdic
  langs:
  - csharp
  - vb
  name: ObsCont
  nameWithType: InfAdic.ObsCont
  fullName: Unimake.Business.DFe.Xml.NFe.InfAdic.ObsCont
  type: Property
  source:
    id: ObsCont
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5599
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public List<ObsCont> ObsCont { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.ObsCont}
    content.vb: Public Property ObsCont As List(Of ObsCont)
  overload: Unimake.Business.DFe.Xml.NFe.InfAdic.ObsCont*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.InfAdic.ObsFisco
  commentId: P:Unimake.Business.DFe.Xml.NFe.InfAdic.ObsFisco
  id: ObsFisco
  parent: Unimake.Business.DFe.Xml.NFe.InfAdic
  langs:
  - csharp
  - vb
  name: ObsFisco
  nameWithType: InfAdic.ObsFisco
  fullName: Unimake.Business.DFe.Xml.NFe.InfAdic.ObsFisco
  type: Property
  source:
    id: ObsFisco
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5605
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  summary: "\nUso exclusivo do fisco. Existe somente para deserialização, não utilizar.\n"
  example: []
  syntax:
    content: public List<ObsFisco> ObsFisco { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.ObsFisco}
    content.vb: Public Property ObsFisco As List(Of ObsFisco)
  overload: Unimake.Business.DFe.Xml.NFe.InfAdic.ObsFisco*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.InfAdic.ProcRef
  commentId: P:Unimake.Business.DFe.Xml.NFe.InfAdic.ProcRef
  id: ProcRef
  parent: Unimake.Business.DFe.Xml.NFe.InfAdic
  langs:
  - csharp
  - vb
  name: ProcRef
  nameWithType: InfAdic.ProcRef
  fullName: Unimake.Business.DFe.Xml.NFe.InfAdic.ProcRef
  type: Property
  source:
    id: ProcRef
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5608
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public List<ProcRef> ProcRef { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.ProcRef}
    content.vb: Public Property ProcRef As List(Of ProcRef)
  overload: Unimake.Business.DFe.Xml.NFe.InfAdic.ProcRef*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.InfAdic.ShouldSerializeInfAdFisco
  commentId: M:Unimake.Business.DFe.Xml.NFe.InfAdic.ShouldSerializeInfAdFisco
  id: ShouldSerializeInfAdFisco
  parent: Unimake.Business.DFe.Xml.NFe.InfAdic
  langs:
  - csharp
  - vb
  name: ShouldSerializeInfAdFisco()
  nameWithType: InfAdic.ShouldSerializeInfAdFisco()
  fullName: Unimake.Business.DFe.Xml.NFe.InfAdic.ShouldSerializeInfAdFisco()
  type: Method
  source:
    id: ShouldSerializeInfAdFisco
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5613
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public bool ShouldSerializeInfAdFisco()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeInfAdFisco As Boolean
  overload: Unimake.Business.DFe.Xml.NFe.InfAdic.ShouldSerializeInfAdFisco*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.InfAdic.ShouldSerializeInfCpl
  commentId: M:Unimake.Business.DFe.Xml.NFe.InfAdic.ShouldSerializeInfCpl
  id: ShouldSerializeInfCpl
  parent: Unimake.Business.DFe.Xml.NFe.InfAdic
  langs:
  - csharp
  - vb
  name: ShouldSerializeInfCpl()
  nameWithType: InfAdic.ShouldSerializeInfCpl()
  fullName: Unimake.Business.DFe.Xml.NFe.InfAdic.ShouldSerializeInfCpl()
  type: Method
  source:
    id: ShouldSerializeInfCpl
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5615
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public bool ShouldSerializeInfCpl()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeInfCpl As Boolean
  overload: Unimake.Business.DFe.Xml.NFe.InfAdic.ShouldSerializeInfCpl*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Unimake.Business.DFe.Xml.NFe
  commentId: N:Unimake.Business.DFe.Xml.NFe
  name: Unimake.Business.DFe.Xml.NFe
  nameWithType: Unimake.Business.DFe.Xml.NFe
  fullName: Unimake.Business.DFe.Xml.NFe
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: Unimake.Business.DFe.Xml.NFe.InfAdic.InfAdFisco*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.InfAdic.InfAdFisco
  name: InfAdFisco
  nameWithType: InfAdic.InfAdFisco
  fullName: Unimake.Business.DFe.Xml.NFe.InfAdic.InfAdFisco
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Unimake.Business.DFe.Xml.NFe.InfAdic.InfCpl*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.InfAdic.InfCpl
  name: InfCpl
  nameWithType: InfAdic.InfCpl
  fullName: Unimake.Business.DFe.Xml.NFe.InfAdic.InfCpl
- uid: Unimake.Business.DFe.Xml.NFe.InfAdic.ObsCont*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.InfAdic.ObsCont
  name: ObsCont
  nameWithType: InfAdic.ObsCont
  fullName: Unimake.Business.DFe.Xml.NFe.InfAdic.ObsCont
- uid: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.ObsCont}
  commentId: T:System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.ObsCont}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ObsCont>
  nameWithType: List<ObsCont>
  fullName: System.Collections.Generic.List<Unimake.Business.DFe.Xml.NFe.ObsCont>
  nameWithType.vb: List(Of ObsCont)
  fullName.vb: System.Collections.Generic.List(Of Unimake.Business.DFe.Xml.NFe.ObsCont)
  name.vb: List(Of ObsCont)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unimake.Business.DFe.Xml.NFe.ObsCont
    name: ObsCont
    nameWithType: ObsCont
    fullName: Unimake.Business.DFe.Xml.NFe.ObsCont
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unimake.Business.DFe.Xml.NFe.ObsCont
    name: ObsCont
    nameWithType: ObsCont
    fullName: Unimake.Business.DFe.Xml.NFe.ObsCont
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Unimake.Business.DFe.Xml.NFe.InfAdic.ObsFisco*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.InfAdic.ObsFisco
  name: ObsFisco
  nameWithType: InfAdic.ObsFisco
  fullName: Unimake.Business.DFe.Xml.NFe.InfAdic.ObsFisco
- uid: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.ObsFisco}
  commentId: T:System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.ObsFisco}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ObsFisco>
  nameWithType: List<ObsFisco>
  fullName: System.Collections.Generic.List<Unimake.Business.DFe.Xml.NFe.ObsFisco>
  nameWithType.vb: List(Of ObsFisco)
  fullName.vb: System.Collections.Generic.List(Of Unimake.Business.DFe.Xml.NFe.ObsFisco)
  name.vb: List(Of ObsFisco)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unimake.Business.DFe.Xml.NFe.ObsFisco
    name: ObsFisco
    nameWithType: ObsFisco
    fullName: Unimake.Business.DFe.Xml.NFe.ObsFisco
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unimake.Business.DFe.Xml.NFe.ObsFisco
    name: ObsFisco
    nameWithType: ObsFisco
    fullName: Unimake.Business.DFe.Xml.NFe.ObsFisco
  - name: )
    nameWithType: )
    fullName: )
- uid: Unimake.Business.DFe.Xml.NFe.InfAdic.ProcRef*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.InfAdic.ProcRef
  name: ProcRef
  nameWithType: InfAdic.ProcRef
  fullName: Unimake.Business.DFe.Xml.NFe.InfAdic.ProcRef
- uid: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.ProcRef}
  commentId: T:System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.ProcRef}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ProcRef>
  nameWithType: List<ProcRef>
  fullName: System.Collections.Generic.List<Unimake.Business.DFe.Xml.NFe.ProcRef>
  nameWithType.vb: List(Of ProcRef)
  fullName.vb: System.Collections.Generic.List(Of Unimake.Business.DFe.Xml.NFe.ProcRef)
  name.vb: List(Of ProcRef)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unimake.Business.DFe.Xml.NFe.ProcRef
    name: ProcRef
    nameWithType: ProcRef
    fullName: Unimake.Business.DFe.Xml.NFe.ProcRef
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unimake.Business.DFe.Xml.NFe.ProcRef
    name: ProcRef
    nameWithType: ProcRef
    fullName: Unimake.Business.DFe.Xml.NFe.ProcRef
  - name: )
    nameWithType: )
    fullName: )
- uid: Unimake.Business.DFe.Xml.NFe.InfAdic.ShouldSerializeInfAdFisco*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.InfAdic.ShouldSerializeInfAdFisco
  name: ShouldSerializeInfAdFisco
  nameWithType: InfAdic.ShouldSerializeInfAdFisco
  fullName: Unimake.Business.DFe.Xml.NFe.InfAdic.ShouldSerializeInfAdFisco
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Unimake.Business.DFe.Xml.NFe.InfAdic.ShouldSerializeInfCpl*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.InfAdic.ShouldSerializeInfCpl
  name: ShouldSerializeInfCpl
  nameWithType: InfAdic.ShouldSerializeInfCpl
  fullName: Unimake.Business.DFe.Xml.NFe.InfAdic.ShouldSerializeInfCpl
