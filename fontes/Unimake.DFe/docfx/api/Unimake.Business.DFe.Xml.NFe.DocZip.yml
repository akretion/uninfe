### YamlMime:ManagedReference
items:
- uid: Unimake.Business.DFe.Xml.NFe.DocZip
  commentId: T:Unimake.Business.DFe.Xml.NFe.DocZip
  id: DocZip
  parent: Unimake.Business.DFe.Xml.NFe
  children:
  - Unimake.Business.DFe.Xml.NFe.DocZip.NSU
  - Unimake.Business.DFe.Xml.NFe.DocZip.Schema
  - Unimake.Business.DFe.Xml.NFe.DocZip.Value
  langs:
  - csharp
  - vb
  name: DocZip
  nameWithType: DocZip
  fullName: Unimake.Business.DFe.Xml.NFe.DocZip
  type: Class
  source:
    id: DocZip
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\RetDistDFeInt.cs
    startLine: 55
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public class DocZip
    content.vb: Public Class DocZip
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Unimake.Business.DFe.Xml.NFe.DocZip.NSU
  commentId: P:Unimake.Business.DFe.Xml.NFe.DocZip.NSU
  id: NSU
  parent: Unimake.Business.DFe.Xml.NFe.DocZip
  langs:
  - csharp
  - vb
  name: NSU
  nameWithType: DocZip.NSU
  fullName: Unimake.Business.DFe.Xml.NFe.DocZip.NSU
  type: Property
  source:
    id: NSU
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\RetDistDFeInt.cs
    startLine: 58
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string NSU { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NSU As String
  overload: Unimake.Business.DFe.Xml.NFe.DocZip.NSU*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.DocZip.Schema
  commentId: P:Unimake.Business.DFe.Xml.NFe.DocZip.Schema
  id: Schema
  parent: Unimake.Business.DFe.Xml.NFe.DocZip
  langs:
  - csharp
  - vb
  name: Schema
  nameWithType: DocZip.Schema
  fullName: Unimake.Business.DFe.Xml.NFe.DocZip.Schema
  type: Property
  source:
    id: Schema
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\RetDistDFeInt.cs
    startLine: 61
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string Schema { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Schema As String
  overload: Unimake.Business.DFe.Xml.NFe.DocZip.Schema*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.DocZip.Value
  commentId: P:Unimake.Business.DFe.Xml.NFe.DocZip.Value
  id: Value
  parent: Unimake.Business.DFe.Xml.NFe.DocZip
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: DocZip.Value
  fullName: Unimake.Business.DFe.Xml.NFe.DocZip.Value
  type: Property
  source:
    id: Value
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\RetDistDFeInt.cs
    startLine: 64
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public byte[] Value { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property Value As Byte()
  overload: Unimake.Business.DFe.Xml.NFe.DocZip.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Unimake.Business.DFe.Xml.NFe
  commentId: N:Unimake.Business.DFe.Xml.NFe
  name: Unimake.Business.DFe.Xml.NFe
  nameWithType: Unimake.Business.DFe.Xml.NFe
  fullName: Unimake.Business.DFe.Xml.NFe
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: Unimake.Business.DFe.Xml.NFe.DocZip.NSU*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.DocZip.NSU
  name: NSU
  nameWithType: DocZip.NSU
  fullName: Unimake.Business.DFe.Xml.NFe.DocZip.NSU
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Unimake.Business.DFe.Xml.NFe.DocZip.Schema*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.DocZip.Schema
  name: Schema
  nameWithType: DocZip.Schema
  fullName: Unimake.Business.DFe.Xml.NFe.DocZip.Schema
- uid: Unimake.Business.DFe.Xml.NFe.DocZip.Value*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.DocZip.Value
  name: Value
  nameWithType: DocZip.Value
  fullName: Unimake.Business.DFe.Xml.NFe.DocZip.Value
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
