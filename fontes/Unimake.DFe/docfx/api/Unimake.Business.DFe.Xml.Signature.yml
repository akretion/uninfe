### YamlMime:ManagedReference
items:
- uid: Unimake.Business.DFe.Xml.Signature
  commentId: T:Unimake.Business.DFe.Xml.Signature
  id: Signature
  parent: Unimake.Business.DFe.Xml
  children:
  - Unimake.Business.DFe.Xml.Signature.KeyInfo
  - Unimake.Business.DFe.Xml.Signature.SignatureValue
  - Unimake.Business.DFe.Xml.Signature.SignedInfo
  - Unimake.Business.DFe.Xml.Signature.Xmlns
  langs:
  - csharp
  - vb
  name: Signature
  nameWithType: Signature
  fullName: Unimake.Business.DFe.Xml.Signature
  type: Class
  source:
    id: Signature
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\Signature.cs
    startLine: 85
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml
  syntax:
    content: public class Signature
    content.vb: Public Class Signature
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Unimake.Business.DFe.Xml.Signature.SignedInfo
  commentId: P:Unimake.Business.DFe.Xml.Signature.SignedInfo
  id: SignedInfo
  parent: Unimake.Business.DFe.Xml.Signature
  langs:
  - csharp
  - vb
  name: SignedInfo
  nameWithType: Signature.SignedInfo
  fullName: Unimake.Business.DFe.Xml.Signature.SignedInfo
  type: Property
  source:
    id: SignedInfo
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\Signature.cs
    startLine: 88
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml
  syntax:
    content: public SignedInfo SignedInfo { get; set; }
    parameters: []
    return:
      type: Unimake.Business.DFe.Xml.SignedInfo
    content.vb: Public Property SignedInfo As SignedInfo
  overload: Unimake.Business.DFe.Xml.Signature.SignedInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.Signature.SignatureValue
  commentId: P:Unimake.Business.DFe.Xml.Signature.SignatureValue
  id: SignatureValue
  parent: Unimake.Business.DFe.Xml.Signature
  langs:
  - csharp
  - vb
  name: SignatureValue
  nameWithType: Signature.SignatureValue
  fullName: Unimake.Business.DFe.Xml.Signature.SignatureValue
  type: Property
  source:
    id: SignatureValue
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\Signature.cs
    startLine: 91
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml
  syntax:
    content: public string SignatureValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SignatureValue As String
  overload: Unimake.Business.DFe.Xml.Signature.SignatureValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.Signature.KeyInfo
  commentId: P:Unimake.Business.DFe.Xml.Signature.KeyInfo
  id: KeyInfo
  parent: Unimake.Business.DFe.Xml.Signature
  langs:
  - csharp
  - vb
  name: KeyInfo
  nameWithType: Signature.KeyInfo
  fullName: Unimake.Business.DFe.Xml.Signature.KeyInfo
  type: Property
  source:
    id: KeyInfo
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\Signature.cs
    startLine: 94
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml
  syntax:
    content: public KeyInfo KeyInfo { get; set; }
    parameters: []
    return:
      type: Unimake.Business.DFe.Xml.KeyInfo
    content.vb: Public Property KeyInfo As KeyInfo
  overload: Unimake.Business.DFe.Xml.Signature.KeyInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.Signature.Xmlns
  commentId: P:Unimake.Business.DFe.Xml.Signature.Xmlns
  id: Xmlns
  parent: Unimake.Business.DFe.Xml.Signature
  langs:
  - csharp
  - vb
  name: Xmlns
  nameWithType: Signature.Xmlns
  fullName: Unimake.Business.DFe.Xml.Signature.Xmlns
  type: Property
  source:
    id: Xmlns
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\Signature.cs
    startLine: 97
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml
  syntax:
    content: public string Xmlns { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Xmlns As String
  overload: Unimake.Business.DFe.Xml.Signature.Xmlns*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Unimake.Business.DFe.Xml
  commentId: N:Unimake.Business.DFe.Xml
  name: Unimake.Business.DFe.Xml
  nameWithType: Unimake.Business.DFe.Xml
  fullName: Unimake.Business.DFe.Xml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: Unimake.Business.DFe.Xml.Signature.SignedInfo*
  commentId: Overload:Unimake.Business.DFe.Xml.Signature.SignedInfo
  name: SignedInfo
  nameWithType: Signature.SignedInfo
  fullName: Unimake.Business.DFe.Xml.Signature.SignedInfo
- uid: Unimake.Business.DFe.Xml.SignedInfo
  commentId: T:Unimake.Business.DFe.Xml.SignedInfo
  parent: Unimake.Business.DFe.Xml
  name: SignedInfo
  nameWithType: SignedInfo
  fullName: Unimake.Business.DFe.Xml.SignedInfo
- uid: Unimake.Business.DFe.Xml.Signature.SignatureValue*
  commentId: Overload:Unimake.Business.DFe.Xml.Signature.SignatureValue
  name: SignatureValue
  nameWithType: Signature.SignatureValue
  fullName: Unimake.Business.DFe.Xml.Signature.SignatureValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Unimake.Business.DFe.Xml.Signature.KeyInfo*
  commentId: Overload:Unimake.Business.DFe.Xml.Signature.KeyInfo
  name: KeyInfo
  nameWithType: Signature.KeyInfo
  fullName: Unimake.Business.DFe.Xml.Signature.KeyInfo
- uid: Unimake.Business.DFe.Xml.KeyInfo
  commentId: T:Unimake.Business.DFe.Xml.KeyInfo
  parent: Unimake.Business.DFe.Xml
  name: KeyInfo
  nameWithType: KeyInfo
  fullName: Unimake.Business.DFe.Xml.KeyInfo
- uid: Unimake.Business.DFe.Xml.Signature.Xmlns*
  commentId: Overload:Unimake.Business.DFe.Xml.Signature.Xmlns
  name: Xmlns
  nameWithType: Signature.Xmlns
  fullName: Unimake.Business.DFe.Xml.Signature.Xmlns
