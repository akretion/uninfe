### YamlMime:ManagedReference
items:
- uid: Unimake.Business.DFe.Xml.NFe.Transp
  commentId: T:Unimake.Business.DFe.Xml.NFe.Transp
  id: Transp
  parent: Unimake.Business.DFe.Xml.NFe
  children:
  - Unimake.Business.DFe.Xml.NFe.Transp.AddReboque(Unimake.Business.DFe.Xml.NFe.Reboque)
  - Unimake.Business.DFe.Xml.NFe.Transp.AddVol(Unimake.Business.DFe.Xml.NFe.Vol)
  - Unimake.Business.DFe.Xml.NFe.Transp.Balsa
  - Unimake.Business.DFe.Xml.NFe.Transp.ModFrete
  - Unimake.Business.DFe.Xml.NFe.Transp.Reboque
  - Unimake.Business.DFe.Xml.NFe.Transp.RetTransp
  - Unimake.Business.DFe.Xml.NFe.Transp.ShouldSerializeBalsa
  - Unimake.Business.DFe.Xml.NFe.Transp.ShouldSerializeVagao
  - Unimake.Business.DFe.Xml.NFe.Transp.Transporta
  - Unimake.Business.DFe.Xml.NFe.Transp.Vagao
  - Unimake.Business.DFe.Xml.NFe.Transp.VeicTransp
  - Unimake.Business.DFe.Xml.NFe.Transp.Vol
  langs:
  - csharp
  - vb
  name: Transp
  nameWithType: Transp
  fullName: Unimake.Business.DFe.Xml.NFe.Transp
  type: Class
  source:
    id: Transp
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5157
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: >-
      [Serializable]

      public class Transp
    content.vb: >-
      <Serializable>

      Public Class Transp
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Unimake.Business.DFe.Xml.NFe.Transp.ModFrete
  commentId: P:Unimake.Business.DFe.Xml.NFe.Transp.ModFrete
  id: ModFrete
  parent: Unimake.Business.DFe.Xml.NFe.Transp
  langs:
  - csharp
  - vb
  name: ModFrete
  nameWithType: Transp.ModFrete
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.ModFrete
  type: Property
  source:
    id: ModFrete
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5161
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public ModalidadeFrete ModFrete { get; set; }
    parameters: []
    return:
      type: Unimake.Business.DFe.Servicos.ModalidadeFrete
    content.vb: Public Property ModFrete As ModalidadeFrete
  overload: Unimake.Business.DFe.Xml.NFe.Transp.ModFrete*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Transp.Transporta
  commentId: P:Unimake.Business.DFe.Xml.NFe.Transp.Transporta
  id: Transporta
  parent: Unimake.Business.DFe.Xml.NFe.Transp
  langs:
  - csharp
  - vb
  name: Transporta
  nameWithType: Transp.Transporta
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.Transporta
  type: Property
  source:
    id: Transporta
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5164
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public Transporta Transporta { get; set; }
    parameters: []
    return:
      type: Unimake.Business.DFe.Xml.NFe.Transporta
    content.vb: Public Property Transporta As Transporta
  overload: Unimake.Business.DFe.Xml.NFe.Transp.Transporta*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Transp.RetTransp
  commentId: P:Unimake.Business.DFe.Xml.NFe.Transp.RetTransp
  id: RetTransp
  parent: Unimake.Business.DFe.Xml.NFe.Transp
  langs:
  - csharp
  - vb
  name: RetTransp
  nameWithType: Transp.RetTransp
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.RetTransp
  type: Property
  source:
    id: RetTransp
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5167
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public RetTransp RetTransp { get; set; }
    parameters: []
    return:
      type: Unimake.Business.DFe.Xml.NFe.RetTransp
    content.vb: Public Property RetTransp As RetTransp
  overload: Unimake.Business.DFe.Xml.NFe.Transp.RetTransp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Transp.VeicTransp
  commentId: P:Unimake.Business.DFe.Xml.NFe.Transp.VeicTransp
  id: VeicTransp
  parent: Unimake.Business.DFe.Xml.NFe.Transp
  langs:
  - csharp
  - vb
  name: VeicTransp
  nameWithType: Transp.VeicTransp
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.VeicTransp
  type: Property
  source:
    id: VeicTransp
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5170
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public VeicTransp VeicTransp { get; set; }
    parameters: []
    return:
      type: Unimake.Business.DFe.Xml.NFe.VeicTransp
    content.vb: Public Property VeicTransp As VeicTransp
  overload: Unimake.Business.DFe.Xml.NFe.Transp.VeicTransp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Transp.Reboque
  commentId: P:Unimake.Business.DFe.Xml.NFe.Transp.Reboque
  id: Reboque
  parent: Unimake.Business.DFe.Xml.NFe.Transp
  langs:
  - csharp
  - vb
  name: Reboque
  nameWithType: Transp.Reboque
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.Reboque
  type: Property
  source:
    id: Reboque
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5173
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public List<Reboque> Reboque { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.Reboque}
    content.vb: Public Property Reboque As List(Of Reboque)
  overload: Unimake.Business.DFe.Xml.NFe.Transp.Reboque*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Transp.Vagao
  commentId: P:Unimake.Business.DFe.Xml.NFe.Transp.Vagao
  id: Vagao
  parent: Unimake.Business.DFe.Xml.NFe.Transp
  langs:
  - csharp
  - vb
  name: Vagao
  nameWithType: Transp.Vagao
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.Vagao
  type: Property
  source:
    id: Vagao
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5176
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string Vagao { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Vagao As String
  overload: Unimake.Business.DFe.Xml.NFe.Transp.Vagao*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Transp.Balsa
  commentId: P:Unimake.Business.DFe.Xml.NFe.Transp.Balsa
  id: Balsa
  parent: Unimake.Business.DFe.Xml.NFe.Transp
  langs:
  - csharp
  - vb
  name: Balsa
  nameWithType: Transp.Balsa
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.Balsa
  type: Property
  source:
    id: Balsa
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5179
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public string Balsa { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Balsa As String
  overload: Unimake.Business.DFe.Xml.NFe.Transp.Balsa*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Transp.Vol
  commentId: P:Unimake.Business.DFe.Xml.NFe.Transp.Vol
  id: Vol
  parent: Unimake.Business.DFe.Xml.NFe.Transp
  langs:
  - csharp
  - vb
  name: Vol
  nameWithType: Transp.Vol
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.Vol
  type: Property
  source:
    id: Vol
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5182
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public List<Vol> Vol { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.Vol}
    content.vb: Public Property Vol As List(Of Vol)
  overload: Unimake.Business.DFe.Xml.NFe.Transp.Vol*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Transp.ShouldSerializeVagao
  commentId: M:Unimake.Business.DFe.Xml.NFe.Transp.ShouldSerializeVagao
  id: ShouldSerializeVagao
  parent: Unimake.Business.DFe.Xml.NFe.Transp
  langs:
  - csharp
  - vb
  name: ShouldSerializeVagao()
  nameWithType: Transp.ShouldSerializeVagao()
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.ShouldSerializeVagao()
  type: Method
  source:
    id: ShouldSerializeVagao
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5187
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public bool ShouldSerializeVagao()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeVagao As Boolean
  overload: Unimake.Business.DFe.Xml.NFe.Transp.ShouldSerializeVagao*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Transp.ShouldSerializeBalsa
  commentId: M:Unimake.Business.DFe.Xml.NFe.Transp.ShouldSerializeBalsa
  id: ShouldSerializeBalsa
  parent: Unimake.Business.DFe.Xml.NFe.Transp
  langs:
  - csharp
  - vb
  name: ShouldSerializeBalsa()
  nameWithType: Transp.ShouldSerializeBalsa()
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.ShouldSerializeBalsa()
  type: Method
  source:
    id: ShouldSerializeBalsa
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5189
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public bool ShouldSerializeBalsa()
    return:
      type: System.Boolean
    content.vb: Public Function ShouldSerializeBalsa As Boolean
  overload: Unimake.Business.DFe.Xml.NFe.Transp.ShouldSerializeBalsa*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Transp.AddReboque(Unimake.Business.DFe.Xml.NFe.Reboque)
  commentId: M:Unimake.Business.DFe.Xml.NFe.Transp.AddReboque(Unimake.Business.DFe.Xml.NFe.Reboque)
  id: AddReboque(Unimake.Business.DFe.Xml.NFe.Reboque)
  parent: Unimake.Business.DFe.Xml.NFe.Transp
  langs:
  - csharp
  - vb
  name: AddReboque(Reboque)
  nameWithType: Transp.AddReboque(Reboque)
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.AddReboque(Unimake.Business.DFe.Xml.NFe.Reboque)
  type: Method
  source:
    id: AddReboque
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5193
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public void AddReboque(Reboque reboque)
    parameters:
    - id: reboque
      type: Unimake.Business.DFe.Xml.NFe.Reboque
    content.vb: Public Sub AddReboque(reboque As Reboque)
  overload: Unimake.Business.DFe.Xml.NFe.Transp.AddReboque*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Unimake.Business.DFe.Xml.NFe.Transp.AddVol(Unimake.Business.DFe.Xml.NFe.Vol)
  commentId: M:Unimake.Business.DFe.Xml.NFe.Transp.AddVol(Unimake.Business.DFe.Xml.NFe.Vol)
  id: AddVol(Unimake.Business.DFe.Xml.NFe.Vol)
  parent: Unimake.Business.DFe.Xml.NFe.Transp
  langs:
  - csharp
  - vb
  name: AddVol(Vol)
  nameWithType: Transp.AddVol(Vol)
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.AddVol(Unimake.Business.DFe.Xml.NFe.Vol)
  type: Method
  source:
    id: AddVol
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Xml\NFe\EnviNFe.cs
    startLine: 5203
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Xml.NFe
  syntax:
    content: public void AddVol(Vol vol)
    parameters:
    - id: vol
      type: Unimake.Business.DFe.Xml.NFe.Vol
    content.vb: Public Sub AddVol(vol As Vol)
  overload: Unimake.Business.DFe.Xml.NFe.Transp.AddVol*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Unimake.Business.DFe.Xml.NFe
  commentId: N:Unimake.Business.DFe.Xml.NFe
  name: Unimake.Business.DFe.Xml.NFe
  nameWithType: Unimake.Business.DFe.Xml.NFe
  fullName: Unimake.Business.DFe.Xml.NFe
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: Unimake.Business.DFe.Xml.NFe.Transp.ModFrete*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Transp.ModFrete
  name: ModFrete
  nameWithType: Transp.ModFrete
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.ModFrete
- uid: Unimake.Business.DFe.Servicos.ModalidadeFrete
  commentId: T:Unimake.Business.DFe.Servicos.ModalidadeFrete
  parent: Unimake.Business.DFe.Servicos
  name: ModalidadeFrete
  nameWithType: ModalidadeFrete
  fullName: Unimake.Business.DFe.Servicos.ModalidadeFrete
- uid: Unimake.Business.DFe.Servicos
  commentId: N:Unimake.Business.DFe.Servicos
  name: Unimake.Business.DFe.Servicos
  nameWithType: Unimake.Business.DFe.Servicos
  fullName: Unimake.Business.DFe.Servicos
- uid: Unimake.Business.DFe.Xml.NFe.Transp.Transporta*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Transp.Transporta
  name: Transporta
  nameWithType: Transp.Transporta
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.Transporta
- uid: Unimake.Business.DFe.Xml.NFe.Transporta
  commentId: T:Unimake.Business.DFe.Xml.NFe.Transporta
  parent: Unimake.Business.DFe.Xml.NFe
  name: Transporta
  nameWithType: Transporta
  fullName: Unimake.Business.DFe.Xml.NFe.Transporta
- uid: Unimake.Business.DFe.Xml.NFe.Transp.RetTransp*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Transp.RetTransp
  name: RetTransp
  nameWithType: Transp.RetTransp
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.RetTransp
- uid: Unimake.Business.DFe.Xml.NFe.RetTransp
  commentId: T:Unimake.Business.DFe.Xml.NFe.RetTransp
  parent: Unimake.Business.DFe.Xml.NFe
  name: RetTransp
  nameWithType: RetTransp
  fullName: Unimake.Business.DFe.Xml.NFe.RetTransp
- uid: Unimake.Business.DFe.Xml.NFe.Transp.VeicTransp*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Transp.VeicTransp
  name: VeicTransp
  nameWithType: Transp.VeicTransp
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.VeicTransp
- uid: Unimake.Business.DFe.Xml.NFe.VeicTransp
  commentId: T:Unimake.Business.DFe.Xml.NFe.VeicTransp
  parent: Unimake.Business.DFe.Xml.NFe
  name: VeicTransp
  nameWithType: VeicTransp
  fullName: Unimake.Business.DFe.Xml.NFe.VeicTransp
- uid: Unimake.Business.DFe.Xml.NFe.Transp.Reboque*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Transp.Reboque
  name: Reboque
  nameWithType: Transp.Reboque
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.Reboque
- uid: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.Reboque}
  commentId: T:System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.Reboque}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Reboque>
  nameWithType: List<Reboque>
  fullName: System.Collections.Generic.List<Unimake.Business.DFe.Xml.NFe.Reboque>
  nameWithType.vb: List(Of Reboque)
  fullName.vb: System.Collections.Generic.List(Of Unimake.Business.DFe.Xml.NFe.Reboque)
  name.vb: List(Of Reboque)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unimake.Business.DFe.Xml.NFe.Reboque
    name: Reboque
    nameWithType: Reboque
    fullName: Unimake.Business.DFe.Xml.NFe.Reboque
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unimake.Business.DFe.Xml.NFe.Reboque
    name: Reboque
    nameWithType: Reboque
    fullName: Unimake.Business.DFe.Xml.NFe.Reboque
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Unimake.Business.DFe.Xml.NFe.Transp.Vagao*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Transp.Vagao
  name: Vagao
  nameWithType: Transp.Vagao
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.Vagao
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Unimake.Business.DFe.Xml.NFe.Transp.Balsa*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Transp.Balsa
  name: Balsa
  nameWithType: Transp.Balsa
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.Balsa
- uid: Unimake.Business.DFe.Xml.NFe.Transp.Vol*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Transp.Vol
  name: Vol
  nameWithType: Transp.Vol
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.Vol
- uid: System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.Vol}
  commentId: T:System.Collections.Generic.List{Unimake.Business.DFe.Xml.NFe.Vol}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vol>
  nameWithType: List<Vol>
  fullName: System.Collections.Generic.List<Unimake.Business.DFe.Xml.NFe.Vol>
  nameWithType.vb: List(Of Vol)
  fullName.vb: System.Collections.Generic.List(Of Unimake.Business.DFe.Xml.NFe.Vol)
  name.vb: List(Of Vol)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Unimake.Business.DFe.Xml.NFe.Vol
    name: Vol
    nameWithType: Vol
    fullName: Unimake.Business.DFe.Xml.NFe.Vol
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Unimake.Business.DFe.Xml.NFe.Vol
    name: Vol
    nameWithType: Vol
    fullName: Unimake.Business.DFe.Xml.NFe.Vol
  - name: )
    nameWithType: )
    fullName: )
- uid: Unimake.Business.DFe.Xml.NFe.Transp.ShouldSerializeVagao*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Transp.ShouldSerializeVagao
  name: ShouldSerializeVagao
  nameWithType: Transp.ShouldSerializeVagao
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.ShouldSerializeVagao
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Unimake.Business.DFe.Xml.NFe.Transp.ShouldSerializeBalsa*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Transp.ShouldSerializeBalsa
  name: ShouldSerializeBalsa
  nameWithType: Transp.ShouldSerializeBalsa
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.ShouldSerializeBalsa
- uid: Unimake.Business.DFe.Xml.NFe.Transp.AddReboque*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Transp.AddReboque
  name: AddReboque
  nameWithType: Transp.AddReboque
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.AddReboque
- uid: Unimake.Business.DFe.Xml.NFe.Reboque
  commentId: T:Unimake.Business.DFe.Xml.NFe.Reboque
  parent: Unimake.Business.DFe.Xml.NFe
  name: Reboque
  nameWithType: Reboque
  fullName: Unimake.Business.DFe.Xml.NFe.Reboque
- uid: Unimake.Business.DFe.Xml.NFe.Transp.AddVol*
  commentId: Overload:Unimake.Business.DFe.Xml.NFe.Transp.AddVol
  name: AddVol
  nameWithType: Transp.AddVol
  fullName: Unimake.Business.DFe.Xml.NFe.Transp.AddVol
- uid: Unimake.Business.DFe.Xml.NFe.Vol
  commentId: T:Unimake.Business.DFe.Xml.NFe.Vol
  parent: Unimake.Business.DFe.Xml.NFe
  name: Vol
  nameWithType: Vol
  fullName: Unimake.Business.DFe.Xml.NFe.Vol
