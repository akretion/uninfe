### YamlMime:ManagedReference
items:
- uid: Unimake.Business.DFe.Security.AssinaturaDigital
  commentId: T:Unimake.Business.DFe.Security.AssinaturaDigital
  id: AssinaturaDigital
  parent: Unimake.Business.DFe.Security
  children:
  - Unimake.Business.DFe.Security.AssinaturaDigital.Assinar(System.Xml.XmlDocument,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,Unimake.Business.DFe.Security.AlgorithmType,System.Boolean,System.String,System.String,System.Boolean)
  - Unimake.Business.DFe.Security.AssinaturaDigital.EstaAssinado(System.Xml.XmlDocument,System.String)
  langs:
  - csharp
  - vb
  name: AssinaturaDigital
  nameWithType: AssinaturaDigital
  fullName: Unimake.Business.DFe.Security.AssinaturaDigital
  type: Class
  source:
    id: AssinaturaDigital
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Security\AssinaturaDigital.cs
    startLine: 12
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Security
  summary: "\nClasse para realizar assinatura digital de XMLs\n"
  example: []
  syntax:
    content: public static class AssinaturaDigital
    content.vb: Public Module AssinaturaDigital
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Unimake.Business.DFe.Security.AssinaturaDigital.Assinar(System.Xml.XmlDocument,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,Unimake.Business.DFe.Security.AlgorithmType,System.Boolean,System.String,System.String,System.Boolean)
  commentId: M:Unimake.Business.DFe.Security.AssinaturaDigital.Assinar(System.Xml.XmlDocument,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,Unimake.Business.DFe.Security.AlgorithmType,System.Boolean,System.String,System.String,System.Boolean)
  id: Assinar(System.Xml.XmlDocument,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate2,Unimake.Business.DFe.Security.AlgorithmType,System.Boolean,System.String,System.String,System.Boolean)
  parent: Unimake.Business.DFe.Security.AssinaturaDigital
  langs:
  - csharp
  - vb
  name: Assinar(XmlDocument, String, String, X509Certificate2, AlgorithmType, Boolean, String, String, Boolean)
  nameWithType: AssinaturaDigital.Assinar(XmlDocument, String, String, X509Certificate2, AlgorithmType, Boolean, String, String, Boolean)
  fullName: Unimake.Business.DFe.Security.AssinaturaDigital.Assinar(System.Xml.XmlDocument, System.String, System.String, System.Security.Cryptography.X509Certificates.X509Certificate2, Unimake.Business.DFe.Security.AlgorithmType, System.Boolean, System.String, System.String, System.Boolean)
  type: Method
  source:
    id: Assinar
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Security\AssinaturaDigital.cs
    startLine: 28
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Security
  summary: "\nAssinar digitalmente o XML\n"
  example: []
  syntax:
    content: public static void Assinar(XmlDocument conteudoXML, string tagAssinatura, string tagAtributoId, X509Certificate2 x509Cert, AlgorithmType algorithmType = AlgorithmType.Sha1, bool definirURI = true, string pinCertificado = "", string idAttributeName = "", bool verificaAssinatura = false)
    parameters:
    - id: conteudoXML
      type: System.Xml.XmlDocument
      description: XML a ser assinado
    - id: tagAssinatura
      type: System.String
      description: Nome da tag a ser assinada
    - id: tagAtributoId
      type: System.String
      description: Nome da tag que possui o ID para referencia na URI da assinatura
    - id: x509Cert
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: Certificado digital a ser utilizado na assinatura
    - id: algorithmType
      type: Unimake.Business.DFe.Security.AlgorithmType
      description: Tipo de algorítimo a ser utilizado na assinatura
    - id: definirURI
      type: System.Boolean
      description: Define o Reference.URI na assinatura
    - id: pinCertificado
      type: System.String
      description: PIN do certificado digital, quando do tipo A3
    - id: idAttributeName
      type: System.String
      description: Nome do atributo que tem o ID para assinatura. Se nada for passado o sistema vai tentar buscar o nome Id ou id, se não encontrar, não vai criar a URI Reference na assinatura com ID.
    - id: verificaAssinatura
      type: System.Boolean
      description: Verificar se já existe assinatura no XML, se sim e existir o método não vai assinar o XML.
    content.vb: Public Shared Sub Assinar(conteudoXML As XmlDocument, tagAssinatura As String, tagAtributoId As String, x509Cert As X509Certificate2, algorithmType As AlgorithmType = AlgorithmType.Sha1, definirURI As Boolean = True, pinCertificado As String = "", idAttributeName As String = "", verificaAssinatura As Boolean = False)
  overload: Unimake.Business.DFe.Security.AssinaturaDigital.Assinar*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Unimake.Business.DFe.Security.AssinaturaDigital.EstaAssinado(System.Xml.XmlDocument,System.String)
  commentId: M:Unimake.Business.DFe.Security.AssinaturaDigital.EstaAssinado(System.Xml.XmlDocument,System.String)
  id: EstaAssinado(System.Xml.XmlDocument,System.String)
  parent: Unimake.Business.DFe.Security.AssinaturaDigital
  langs:
  - csharp
  - vb
  name: EstaAssinado(XmlDocument, String)
  nameWithType: AssinaturaDigital.EstaAssinado(XmlDocument, String)
  fullName: Unimake.Business.DFe.Security.AssinaturaDigital.EstaAssinado(System.Xml.XmlDocument, System.String)
  type: Method
  source:
    id: EstaAssinado
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Security\AssinaturaDigital.cs
    startLine: 163
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Security
  summary: "\nVerificar se o XML já tem assinatura\n"
  example: []
  syntax:
    content: public static bool EstaAssinado(XmlDocument conteudoXML, string tagAssinatura)
    parameters:
    - id: conteudoXML
      type: System.Xml.XmlDocument
      description: Conteúdo do XML
    - id: tagAssinatura
      type: System.String
      description: Tag de assinatura onde vamos pesquisar
    return:
      type: System.Boolean
      description: true = Já está assinado
    content.vb: Public Shared Function EstaAssinado(conteudoXML As XmlDocument, tagAssinatura As String) As Boolean
  overload: Unimake.Business.DFe.Security.AssinaturaDigital.EstaAssinado*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Unimake.Business.DFe.Security
  commentId: N:Unimake.Business.DFe.Security
  name: Unimake.Business.DFe.Security
  nameWithType: Unimake.Business.DFe.Security
  fullName: Unimake.Business.DFe.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: Unimake.Business.DFe.Security.AssinaturaDigital.Assinar*
  commentId: Overload:Unimake.Business.DFe.Security.AssinaturaDigital.Assinar
  name: Assinar
  nameWithType: AssinaturaDigital.Assinar
  fullName: Unimake.Business.DFe.Security.AssinaturaDigital.Assinar
- uid: System.Xml.XmlDocument
  commentId: T:System.Xml.XmlDocument
  parent: System.Xml
  isExternal: true
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: Unimake.Business.DFe.Security.AlgorithmType
  commentId: T:Unimake.Business.DFe.Security.AlgorithmType
  parent: Unimake.Business.DFe.Security
  name: AlgorithmType
  nameWithType: AlgorithmType
  fullName: Unimake.Business.DFe.Security.AlgorithmType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: true
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: Unimake.Business.DFe.Security.AssinaturaDigital.EstaAssinado*
  commentId: Overload:Unimake.Business.DFe.Security.AssinaturaDigital.EstaAssinado
  name: EstaAssinado
  nameWithType: AssinaturaDigital.EstaAssinado
  fullName: Unimake.Business.DFe.Security.AssinaturaDigital.EstaAssinado
