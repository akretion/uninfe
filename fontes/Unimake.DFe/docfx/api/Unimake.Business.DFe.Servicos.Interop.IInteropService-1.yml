### YamlMime:ManagedReference
items:
- uid: Unimake.Business.DFe.Servicos.Interop.IInteropService`1
  commentId: T:Unimake.Business.DFe.Servicos.Interop.IInteropService`1
  id: IInteropService`1
  parent: Unimake.Business.DFe.Servicos.Interop
  children:
  - Unimake.Business.DFe.Servicos.Interop.IInteropService`1.Executar
  - Unimake.Business.DFe.Servicos.Interop.IInteropService`1.Executar(`0,Unimake.Business.DFe.Servicos.Configuracao)
  langs:
  - csharp
  - vb
  name: IInteropService<TInteropType>
  nameWithType: IInteropService<TInteropType>
  fullName: Unimake.Business.DFe.Servicos.Interop.IInteropService<TInteropType>
  type: Interface
  source:
    id: IInteropService
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Servicos\Interop\Contract\IInteropService.cs
    startLine: 10
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Servicos.Interop
  summary: "\nOs objetos que irão se comunicar via interop, deverão implementar esta interface,\npois a mesma expõe os métodos necessários para a comunicação via interop.\n"
  example: []
  syntax:
    content: >-
      public interface IInteropService<TInteropType>
          where TInteropType : XMLBase
    typeParameters:
    - id: TInteropType
      description: Objeto que irá expor seus métodos para o interop
    content.vb: Public Interface IInteropService(Of TInteropType As XMLBase)
  nameWithType.vb: IInteropService(Of TInteropType)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Unimake.Business.DFe.Servicos.Interop.IInteropService(Of TInteropType)
  name.vb: IInteropService(Of TInteropType)
- uid: Unimake.Business.DFe.Servicos.Interop.IInteropService`1.Executar
  commentId: M:Unimake.Business.DFe.Servicos.Interop.IInteropService`1.Executar
  id: Executar
  parent: Unimake.Business.DFe.Servicos.Interop.IInteropService`1
  langs:
  - csharp
  - vb
  name: Executar()
  nameWithType: IInteropService<TInteropType>.Executar()
  fullName: Unimake.Business.DFe.Servicos.Interop.IInteropService<TInteropType>.Executar()
  type: Method
  source:
    id: Executar
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Servicos\Interop\Contract\IInteropService.cs
    startLine: 18
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Servicos.Interop
  summary: "\nRealiza a execução da consulta com a Sefaz\n"
  example: []
  syntax:
    content: >-
      [ComVisible(false)]

      void Executar()
    content.vb: >-
      <ComVisible(False)>

      Sub Executar
  overload: Unimake.Business.DFe.Servicos.Interop.IInteropService`1.Executar*
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
    ctor: System.Runtime.InteropServices.ComVisibleAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: IInteropService(Of TInteropType).Executar()
  fullName.vb: Unimake.Business.DFe.Servicos.Interop.IInteropService(Of TInteropType).Executar()
- uid: Unimake.Business.DFe.Servicos.Interop.IInteropService`1.Executar(`0,Unimake.Business.DFe.Servicos.Configuracao)
  commentId: M:Unimake.Business.DFe.Servicos.Interop.IInteropService`1.Executar(`0,Unimake.Business.DFe.Servicos.Configuracao)
  id: Executar(`0,Unimake.Business.DFe.Servicos.Configuracao)
  parent: Unimake.Business.DFe.Servicos.Interop.IInteropService`1
  langs:
  - csharp
  - vb
  name: Executar(TInteropType, Configuracao)
  nameWithType: IInteropService<TInteropType>.Executar(TInteropType, Configuracao)
  fullName: Unimake.Business.DFe.Servicos.Interop.IInteropService<TInteropType>.Executar(TInteropType, Unimake.Business.DFe.Servicos.Configuracao)
  type: Method
  source:
    id: Executar
    path: D:\projetos\uninfe\trunk\fontes\.NET Standard\Unimake.Business.DFe\Servicos\Interop\Contract\IInteropService.cs
    startLine: 27
  assemblies:
  - Unimake.Business.DFe
  namespace: Unimake.Business.DFe.Servicos.Interop
  summary: "\nRealiza a execução da consulta com a Sefaz passando os parâmetros no método quando usado pelo interop.\n<p>Pode ser usado normalmente, mesmo que não seja via interop.</p>\n"
  example: []
  syntax:
    content: >-
      [ComVisible(true)]

      void Executar(TInteropType interopType, Configuracao configuracao)
    parameters:
    - id: interopType
      type: '{TInteropType}'
      description: Tipo esperado para execução da consulta.
    - id: configuracao
      type: Unimake.Business.DFe.Servicos.Configuracao
      description: Configuração específica para o tipo definido em TInteropType
    content.vb: >-
      <ComVisible(True)>

      Sub Executar(interopType As TInteropType, configuracao As Configuracao)
  overload: Unimake.Business.DFe.Servicos.Interop.IInteropService`1.Executar*
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
    ctor: System.Runtime.InteropServices.ComVisibleAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  nameWithType.vb: IInteropService(Of TInteropType).Executar(TInteropType, Configuracao)
  fullName.vb: Unimake.Business.DFe.Servicos.Interop.IInteropService(Of TInteropType).Executar(TInteropType, Unimake.Business.DFe.Servicos.Configuracao)
references:
- uid: Unimake.Business.DFe.Servicos.Interop
  commentId: N:Unimake.Business.DFe.Servicos.Interop
  name: Unimake.Business.DFe.Servicos.Interop
  nameWithType: Unimake.Business.DFe.Servicos.Interop
  fullName: Unimake.Business.DFe.Servicos.Interop
- uid: Unimake.Business.DFe.Servicos.Interop.IInteropService`1.Executar*
  commentId: Overload:Unimake.Business.DFe.Servicos.Interop.IInteropService`1.Executar
  name: Executar
  nameWithType: IInteropService<TInteropType>.Executar
  fullName: Unimake.Business.DFe.Servicos.Interop.IInteropService<TInteropType>.Executar
  nameWithType.vb: IInteropService(Of TInteropType).Executar
  fullName.vb: Unimake.Business.DFe.Servicos.Interop.IInteropService(Of TInteropType).Executar
- uid: '{TInteropType}'
  commentId: '!:TInteropType'
  definition: TInteropType
  name: TInteropType
  nameWithType: TInteropType
  fullName: TInteropType
- uid: Unimake.Business.DFe.Servicos.Configuracao
  commentId: T:Unimake.Business.DFe.Servicos.Configuracao
  parent: Unimake.Business.DFe.Servicos
  name: Configuracao
  nameWithType: Configuracao
  fullName: Unimake.Business.DFe.Servicos.Configuracao
- uid: TInteropType
  commentId: '!:TInteropType'
  name: TInteropType
  nameWithType: TInteropType
  fullName: TInteropType
- uid: Unimake.Business.DFe.Servicos
  commentId: N:Unimake.Business.DFe.Servicos
  name: Unimake.Business.DFe.Servicos
  nameWithType: Unimake.Business.DFe.Servicos
  fullName: Unimake.Business.DFe.Servicos
