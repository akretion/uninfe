//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NFe.Components.HGeisWeb {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GeisWebServiceBinding", Namespace="urn:https://www.geisweb.net.br/homologacao/modelo/webservice/GeisWebServiceImpl.p" +
        "hp")]
    public partial class GeisWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ConsultaLoteRpsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultaNfseOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnviaLoteRpsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelaNfseOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public GeisWebService() {
            this.Url = global::NFe.Components.Properties.Settings.Default.NFe_Components_HGeisWeb_GeisWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ConsultaLoteRpsCompletedEventHandler ConsultaLoteRpsCompleted;
        
        /// <remarks/>
        public event ConsultaNfseCompletedEventHandler ConsultaNfseCompleted;
        
        /// <remarks/>
        public event EnviaLoteRpsCompletedEventHandler EnviaLoteRpsCompleted;
        
        /// <remarks/>
        public event CancelaNfseCompletedEventHandler CancelaNfseCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:https://www.geisweb.net.br/homologacao/modelo/webservice/GeisWebServiceImpl.p" +
            "hp#ConsultaLoteRps", RequestNamespace="urn:https://www.geisweb.net.br/homologacao/modelo/webservice/GeisWebServiceImpl.p" +
            "hp", ResponseNamespace="urn:https://www.geisweb.net.br/homologacao/modelo/webservice/GeisWebServiceImpl.p" +
            "hp")]
        [return: System.Xml.Serialization.SoapElementAttribute("ConsultaLoteRpsResposta")]
        public string ConsultaLoteRps([System.Xml.Serialization.SoapElementAttribute("ConsultaLoteRps")] string ConsultaLoteRps1) {
            object[] results = this.Invoke("ConsultaLoteRps", new object[] {
                        ConsultaLoteRps1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultaLoteRpsAsync(string ConsultaLoteRps1) {
            this.ConsultaLoteRpsAsync(ConsultaLoteRps1, null);
        }
        
        /// <remarks/>
        public void ConsultaLoteRpsAsync(string ConsultaLoteRps1, object userState) {
            if ((this.ConsultaLoteRpsOperationCompleted == null)) {
                this.ConsultaLoteRpsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultaLoteRpsOperationCompleted);
            }
            this.InvokeAsync("ConsultaLoteRps", new object[] {
                        ConsultaLoteRps1}, this.ConsultaLoteRpsOperationCompleted, userState);
        }
        
        private void OnConsultaLoteRpsOperationCompleted(object arg) {
            if ((this.ConsultaLoteRpsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultaLoteRpsCompleted(this, new ConsultaLoteRpsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:https://www.geisweb.net.br/homologacao/modelo/webservice/GeisWebServiceImpl.p" +
            "hp#ConsultaNfse", RequestNamespace="urn:https://www.geisweb.net.br/homologacao/modelo/webservice/GeisWebServiceImpl.p" +
            "hp", ResponseNamespace="urn:https://www.geisweb.net.br/homologacao/modelo/webservice/GeisWebServiceImpl.p" +
            "hp")]
        [return: System.Xml.Serialization.SoapElementAttribute("ConsultaNfseResposta")]
        public string ConsultaNfse([System.Xml.Serialization.SoapElementAttribute("ConsultaNfse")] string ConsultaNfse1) {
            object[] results = this.Invoke("ConsultaNfse", new object[] {
                        ConsultaNfse1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultaNfseAsync(string ConsultaNfse1) {
            this.ConsultaNfseAsync(ConsultaNfse1, null);
        }
        
        /// <remarks/>
        public void ConsultaNfseAsync(string ConsultaNfse1, object userState) {
            if ((this.ConsultaNfseOperationCompleted == null)) {
                this.ConsultaNfseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultaNfseOperationCompleted);
            }
            this.InvokeAsync("ConsultaNfse", new object[] {
                        ConsultaNfse1}, this.ConsultaNfseOperationCompleted, userState);
        }
        
        private void OnConsultaNfseOperationCompleted(object arg) {
            if ((this.ConsultaNfseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultaNfseCompleted(this, new ConsultaNfseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:https://www.geisweb.net.br/homologacao/modelo/webservice/GeisWebServiceImpl.p" +
            "hp#EnviaLoteRps", RequestNamespace="urn:https://www.geisweb.net.br/homologacao/modelo/webservice/GeisWebServiceImpl.p" +
            "hp", ResponseNamespace="urn:https://www.geisweb.net.br/homologacao/modelo/webservice/GeisWebServiceImpl.p" +
            "hp")]
        [return: System.Xml.Serialization.SoapElementAttribute("EnviaLoteRpsResposta")]
        public string EnviaLoteRps([System.Xml.Serialization.SoapElementAttribute("EnviaLoteRps")] string EnviaLoteRps1) {
            object[] results = this.Invoke("EnviaLoteRps", new object[] {
                        EnviaLoteRps1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EnviaLoteRpsAsync(string EnviaLoteRps1) {
            this.EnviaLoteRpsAsync(EnviaLoteRps1, null);
        }
        
        /// <remarks/>
        public void EnviaLoteRpsAsync(string EnviaLoteRps1, object userState) {
            if ((this.EnviaLoteRpsOperationCompleted == null)) {
                this.EnviaLoteRpsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnviaLoteRpsOperationCompleted);
            }
            this.InvokeAsync("EnviaLoteRps", new object[] {
                        EnviaLoteRps1}, this.EnviaLoteRpsOperationCompleted, userState);
        }
        
        private void OnEnviaLoteRpsOperationCompleted(object arg) {
            if ((this.EnviaLoteRpsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnviaLoteRpsCompleted(this, new EnviaLoteRpsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:https://www.geisweb.net.br/homologacao/modelo/webservice/GeisWebServiceImpl.p" +
            "hp#CancelaNfse", RequestNamespace="urn:https://www.geisweb.net.br/homologacao/modelo/webservice/GeisWebServiceImpl.p" +
            "hp", ResponseNamespace="urn:https://www.geisweb.net.br/homologacao/modelo/webservice/GeisWebServiceImpl.p" +
            "hp")]
        [return: System.Xml.Serialization.SoapElementAttribute("CancelaNfseResposta")]
        public string CancelaNfse([System.Xml.Serialization.SoapElementAttribute("CancelaNfse")] string CancelaNfse1) {
            object[] results = this.Invoke("CancelaNfse", new object[] {
                        CancelaNfse1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelaNfseAsync(string CancelaNfse1) {
            this.CancelaNfseAsync(CancelaNfse1, null);
        }
        
        /// <remarks/>
        public void CancelaNfseAsync(string CancelaNfse1, object userState) {
            if ((this.CancelaNfseOperationCompleted == null)) {
                this.CancelaNfseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelaNfseOperationCompleted);
            }
            this.InvokeAsync("CancelaNfse", new object[] {
                        CancelaNfse1}, this.CancelaNfseOperationCompleted, userState);
        }
        
        private void OnCancelaNfseOperationCompleted(object arg) {
            if ((this.CancelaNfseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelaNfseCompleted(this, new CancelaNfseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ConsultaLoteRpsCompletedEventHandler(object sender, ConsultaLoteRpsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultaLoteRpsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultaLoteRpsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ConsultaNfseCompletedEventHandler(object sender, ConsultaNfseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultaNfseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultaNfseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EnviaLoteRpsCompletedEventHandler(object sender, EnviaLoteRpsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnviaLoteRpsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnviaLoteRpsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelaNfseCompletedEventHandler(object sender, CancelaNfseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelaNfseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelaNfseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591